{
  "contractName": "CrowdsaleToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "setTransferAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setReleaseAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "receiver",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "mintAgents",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "setMintAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upgradeAgent",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upgradeMaster",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUpgradeState",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "transferAgents",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "released",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokensToBeReturned",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalUpgraded",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "releaseAgent",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "setUpgradeAgent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isToken",
      "outputs": [
        {
          "name": "weAre",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "master",
          "type": "address"
        }
      ],
      "name": "setUpgradeMaster",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_initialSupply",
          "type": "uint256"
        },
        {
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "name": "_mintable",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newName",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "newSymbol",
          "type": "string"
        }
      ],
      "name": "UpdatedTokenInformation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Upgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "UpgradeAgentSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "MintingAgentChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "releaseTokenTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "canUpgrade",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "setTokenInformation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600460146101000a81548160ff0219169083151502179055506000600660006101000a81548160ff0219169083151502179055503480156200004757600080fd5b506040516200341f3803806200341f83398101806040528101908080518201929190602001805182019291906020018051906020019092919080519060200190929190805190602001909291905050503333600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600b908051906020019062000174929190620002df565b5083600c90805190602001906200018d929190620002df565b508260018190555081600d81905550600154600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060015411156200029f577f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b801515620002d4576001600660006101000a81548160ff02191690831515021790555060006001541415620002d357600080fd5b5b50505050506200038e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200032257805160ff191683800117855562000353565b8280016001018555821562000353579182015b828111156200035257825182559160200191906001019062000335565b5b50905062000362919062000366565b5090565b6200038b91905b80821115620003875760008160009055506001016200036d565b5090565b90565b613081806200039e6000396000f3006080604052600436106101b7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302f652a3146101bc57806305d2035b1461020b57806306fdde031461023a578063095ea7b3146102ca57806316114acd1461032f57806318160ddd1461037257806323b872dd1461039d57806329ff4f5314610422578063313ce5671461046557806340c10f191461049057806342c1867b146104dd578063432146751461053857806345977d03146105875780634eee966f146105b45780635de4ccb0146106635780635f412d4f146106ba578063600440cb146106d1578063661884631461072857806370a082311461078d5780638444b391146107e4578063867c28571461081d5780638da5cb5b1461087857806395d89b41146108cf578063961325211461095f5780639738968c1461098e578063a9059cbb146109bd578063c45d19db14610a22578063c752ff6214610a79578063d1f276d314610aa4578063d73dd62314610afb578063d7e7088a14610b60578063dd62ed3e14610ba3578063eefa597b14610c1a578063f2fde38b14610c49578063ffeb7d7514610c8c575b600080fd5b3480156101c857600080fd5b50610209600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610ccf565b005b34801561021757600080fd5b50610220610daa565b604051808215151515815260200191505060405180910390f35b34801561024657600080fd5b5061024f610dbd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028f578082015181840152602081019050610274565b50505050905090810190601f1680156102bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d657600080fd5b50610315600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e5b565b604051808215151515815260200191505060405180910390f35b34801561033b57600080fd5b50610370600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f4d565b005b34801561037e57600080fd5b506103876110b5565b6040518082815260200191505060405180910390f35b3480156103a957600080fd5b50610408600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110bf565b604051808215151515815260200191505060405180910390f35b34801561042e57600080fd5b50610463600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611146565b005b34801561047157600080fd5b5061047a61120a565b6040518082815260200191505060405180910390f35b34801561049c57600080fd5b506104db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611210565b005b3480156104e957600080fd5b5061051e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114be565b604051808215151515815260200191505060405180910390f35b34801561054457600080fd5b50610585600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506114de565b005b34801561059357600080fd5b506105b26004803603810190808035906020019092919050505061161e565b005b3480156105c057600080fd5b50610661600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506118ae565b005b34801561066f57600080fd5b50610678611a81565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106c657600080fd5b506106cf611aa7565b005b3480156106dd57600080fd5b506106e6611b28565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561073457600080fd5b50610773600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b4e565b604051808215151515815260200191505060405180910390f35b34801561079957600080fd5b506107ce600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ddf565b6040518082815260200191505060405180910390f35b3480156107f057600080fd5b506107f9611e27565b6040518082600481111561080957fe5b60ff16815260200191505060405180910390f35b34801561082957600080fd5b5061085e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea6565b604051808215151515815260200191505060405180910390f35b34801561088457600080fd5b5061088d611ec6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108db57600080fd5b506108e4611eec565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610924578082015181840152602081019050610909565b50505050905090810190601f1680156109515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561096b57600080fd5b50610974611f8a565b604051808215151515815260200191505060405180910390f35b34801561099a57600080fd5b506109a3611f9d565b604051808215151515815260200191505060405180910390f35b3480156109c957600080fd5b50610a08600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611fc4565b604051808215151515815260200191505060405180910390f35b348015610a2e57600080fd5b50610a63600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612049565b6040518082815260200191505060405180910390f35b348015610a8557600080fd5b50610a8e612128565b6040518082815260200191505060405180910390f35b348015610ab057600080fd5b50610ab961212e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b0757600080fd5b50610b46600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612154565b604051808215151515815260200191505060405180910390f35b348015610b6c57600080fd5b50610ba1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612350565b005b348015610baf57600080fd5b50610c04600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612672565b6040518082815260200191505060405180910390f35b348015610c2657600080fd5b50610c2f6126f9565b604051808215151515815260200191505060405180910390f35b348015610c5557600080fd5b50610c8a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612702565b005b348015610c9857600080fd5b50610ccd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061285a565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2b57600080fd5b6000600460149054906101000a900460ff161515811515141515610d4e57600080fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600660009054906101000a900460ff1681565b600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e535780601f10610e2857610100808354040283529160200191610e53565b820191906000526020600020905b815481529060010190602001808311610e3657829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fa957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610ff184612049565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561107657600080fd5b505af115801561108a573d6000803e3d6000fd5b505050506040513d60208110156110a057600080fd5b81019080805190602001909291905050505050565b6000600154905090565b600083600460149054906101000a900460ff16151561113157600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561113057600080fd5b5b61113c85858561291e565b9150509392505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111a257600080fd5b6000600460149054906101000a900460ff1615158115151415156111c557600080fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600d5481565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561126857600080fd5b600660009054906101000a900460ff161561128257600080fd5b60015473__SafeMathLib___________________________6366098d4f9091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1580156112f957600080fd5b505af415801561130d573d6000803e3d6000fd5b505050506040513d602081101561132357600080fd5b81019080805190602001909291905050506001819055506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205473__SafeMathLib___________________________6366098d4f9091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1580156113ed57600080fd5b505af4158015611401573d6000803e3d6000fd5b505050506040513d602081101561141757600080fd5b81019080805190602001909291905050506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60076020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561153a57600080fd5b600660009054906101000a900460ff161561155457600080fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f4b0adf6c802794c7dde28a08a4e07131abcff3bf9603cd71f14f90bec7865efa8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a15050565b6000611628611e27565b90506003600481111561163757fe5b81600481111561164357fe5b1480611664575060048081111561165657fe5b81600481111561166257fe5b145b151561166f57600080fd5b600082141561167d57600080fd5b6116ce826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cd890919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061172582600154612cd890919063ffffffff16565b60018190555061174082600a54612cf190919063ffffffff16565b600a81905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663753e88e533846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561180b57600080fd5b505af115801561181f573d6000803e3d6000fd5b50505050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7e5c344a8141a805725cb476f76c6953b842222b967edd1f78ddb6e8b3f397ac846040518082815260200191505060405180910390a35050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561190a57600080fd5b81600b9080519060200190611920929190612fb0565b5080600c9080519060200190611937929190612fb0565b507fd131ab1e6f279deea74e13a18477e13e2107deb6dc8ae955648948be5841fb46600b600c6040518080602001806020018381038352858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156119ea5780601f106119bf576101008083540402835291602001916119ea565b820191906000526020600020905b8154815290600101906020018083116119cd57829003601f168201915b5050838103825284818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611a6d5780601f10611a4257610100808354040283529160200191611a6d565b820191906000526020600020905b815481529060010190602001808311611a5057829003601f168201915b505094505050505060405180910390a15050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b0357600080fd5b6001600660006101000a81548160ff021916908315150217905550611b26612d0f565b565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115611c5f576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cf3565b611c728382612cd890919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000611e31611f9d565b1515611e405760019050611ea3565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611e8a5760029050611ea3565b6000600a541415611e9e5760039050611ea3565b600490505b90565b60056020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f825780601f10611f5757610100808354040283529160200191611f82565b820191906000526020600020905b815481529060010190602001808311611f6557829003601f168201915b505050505081565b600460149054906101000a900460ff1681565b6000600460149054906101000a900460ff168015611fbf5750611fbe612d88565b5b905090565b600033600460149054906101000a900460ff16151561203657600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561203557600080fd5b5b6120408484612d91565b91505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156120e657600080fd5b505af11580156120fa573d6000803e3d6000fd5b505050506040513d602081101561211057600080fd5b81019080805190602001909291905050509050919050565b600a5481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006121e582600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b612358611f9d565b151561236357600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff16141561238757600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156123e357600080fd5b6004808111156123ef57fe5b6123f7611e27565b600481111561240257fe5b141561240d57600080fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166361d3d7a66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156124d457600080fd5b505af11580156124e8573d6000803e3d6000fd5b505050506040513d60208110156124fe57600080fd5b8101908080519060200190929190505050151561251a57600080fd5b600154600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b2ba0dd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156125a357600080fd5b505af11580156125b7573d6000803e3d6000fd5b505050506040513d60208110156125cd57600080fd5b81019080805190602001909291905050501415156125ea57600080fd5b7f7845d5aa74cc410e35571258d954f23b82276e160fe8c188fa80566580f279cc600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561275e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561279a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff16141561287e57600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156128da57600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561295b57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156129a857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612a3357600080fd5b612a84826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cd890919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b17826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612be882600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cd890919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000828211151515612ce657fe5b818303905092915050565b6000808284019050838110151515612d0557fe5b8091505092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612d6b57600080fd5b6001600460146101000a81548160ff021916908315150217905550565b60006001905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612dce57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612e1b57600080fd5b612e6c826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cd890919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612eff826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ff157805160ff191683800117855561301f565b8280016001018555821561301f579182015b8281111561301e578251825591602001919060010190613003565b5b50905061302c9190613030565b5090565b61305291905b8082111561304e576000816000905550600101613036565b5090565b905600a165627a7a72305820eebb6746638c69ab873b7c53a020cad124a0e6d2d3b5a8bcb9f6b33dbfed346c0029",
  "deployedBytecode": "0x6080604052600436106101b7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302f652a3146101bc57806305d2035b1461020b57806306fdde031461023a578063095ea7b3146102ca57806316114acd1461032f57806318160ddd1461037257806323b872dd1461039d57806329ff4f5314610422578063313ce5671461046557806340c10f191461049057806342c1867b146104dd578063432146751461053857806345977d03146105875780634eee966f146105b45780635de4ccb0146106635780635f412d4f146106ba578063600440cb146106d1578063661884631461072857806370a082311461078d5780638444b391146107e4578063867c28571461081d5780638da5cb5b1461087857806395d89b41146108cf578063961325211461095f5780639738968c1461098e578063a9059cbb146109bd578063c45d19db14610a22578063c752ff6214610a79578063d1f276d314610aa4578063d73dd62314610afb578063d7e7088a14610b60578063dd62ed3e14610ba3578063eefa597b14610c1a578063f2fde38b14610c49578063ffeb7d7514610c8c575b600080fd5b3480156101c857600080fd5b50610209600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610ccf565b005b34801561021757600080fd5b50610220610daa565b604051808215151515815260200191505060405180910390f35b34801561024657600080fd5b5061024f610dbd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028f578082015181840152602081019050610274565b50505050905090810190601f1680156102bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d657600080fd5b50610315600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e5b565b604051808215151515815260200191505060405180910390f35b34801561033b57600080fd5b50610370600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f4d565b005b34801561037e57600080fd5b506103876110b5565b6040518082815260200191505060405180910390f35b3480156103a957600080fd5b50610408600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110bf565b604051808215151515815260200191505060405180910390f35b34801561042e57600080fd5b50610463600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611146565b005b34801561047157600080fd5b5061047a61120a565b6040518082815260200191505060405180910390f35b34801561049c57600080fd5b506104db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611210565b005b3480156104e957600080fd5b5061051e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114be565b604051808215151515815260200191505060405180910390f35b34801561054457600080fd5b50610585600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506114de565b005b34801561059357600080fd5b506105b26004803603810190808035906020019092919050505061161e565b005b3480156105c057600080fd5b50610661600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506118ae565b005b34801561066f57600080fd5b50610678611a81565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106c657600080fd5b506106cf611aa7565b005b3480156106dd57600080fd5b506106e6611b28565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561073457600080fd5b50610773600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b4e565b604051808215151515815260200191505060405180910390f35b34801561079957600080fd5b506107ce600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ddf565b6040518082815260200191505060405180910390f35b3480156107f057600080fd5b506107f9611e27565b6040518082600481111561080957fe5b60ff16815260200191505060405180910390f35b34801561082957600080fd5b5061085e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea6565b604051808215151515815260200191505060405180910390f35b34801561088457600080fd5b5061088d611ec6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108db57600080fd5b506108e4611eec565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610924578082015181840152602081019050610909565b50505050905090810190601f1680156109515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561096b57600080fd5b50610974611f8a565b604051808215151515815260200191505060405180910390f35b34801561099a57600080fd5b506109a3611f9d565b604051808215151515815260200191505060405180910390f35b3480156109c957600080fd5b50610a08600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611fc4565b604051808215151515815260200191505060405180910390f35b348015610a2e57600080fd5b50610a63600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612049565b6040518082815260200191505060405180910390f35b348015610a8557600080fd5b50610a8e612128565b6040518082815260200191505060405180910390f35b348015610ab057600080fd5b50610ab961212e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b0757600080fd5b50610b46600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612154565b604051808215151515815260200191505060405180910390f35b348015610b6c57600080fd5b50610ba1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612350565b005b348015610baf57600080fd5b50610c04600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612672565b6040518082815260200191505060405180910390f35b348015610c2657600080fd5b50610c2f6126f9565b604051808215151515815260200191505060405180910390f35b348015610c5557600080fd5b50610c8a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612702565b005b348015610c9857600080fd5b50610ccd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061285a565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2b57600080fd5b6000600460149054906101000a900460ff161515811515141515610d4e57600080fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600660009054906101000a900460ff1681565b600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e535780601f10610e2857610100808354040283529160200191610e53565b820191906000526020600020905b815481529060010190602001808311610e3657829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fa957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610ff184612049565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561107657600080fd5b505af115801561108a573d6000803e3d6000fd5b505050506040513d60208110156110a057600080fd5b81019080805190602001909291905050505050565b6000600154905090565b600083600460149054906101000a900460ff16151561113157600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561113057600080fd5b5b61113c85858561291e565b9150509392505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111a257600080fd5b6000600460149054906101000a900460ff1615158115151415156111c557600080fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600d5481565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561126857600080fd5b600660009054906101000a900460ff161561128257600080fd5b60015473__SafeMathLib___________________________6366098d4f9091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1580156112f957600080fd5b505af415801561130d573d6000803e3d6000fd5b505050506040513d602081101561132357600080fd5b81019080805190602001909291905050506001819055506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205473__SafeMathLib___________________________6366098d4f9091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1580156113ed57600080fd5b505af4158015611401573d6000803e3d6000fd5b505050506040513d602081101561141757600080fd5b81019080805190602001909291905050506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60076020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561153a57600080fd5b600660009054906101000a900460ff161561155457600080fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f4b0adf6c802794c7dde28a08a4e07131abcff3bf9603cd71f14f90bec7865efa8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a15050565b6000611628611e27565b90506003600481111561163757fe5b81600481111561164357fe5b1480611664575060048081111561165657fe5b81600481111561166257fe5b145b151561166f57600080fd5b600082141561167d57600080fd5b6116ce826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cd890919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061172582600154612cd890919063ffffffff16565b60018190555061174082600a54612cf190919063ffffffff16565b600a81905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663753e88e533846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561180b57600080fd5b505af115801561181f573d6000803e3d6000fd5b50505050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7e5c344a8141a805725cb476f76c6953b842222b967edd1f78ddb6e8b3f397ac846040518082815260200191505060405180910390a35050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561190a57600080fd5b81600b9080519060200190611920929190612fb0565b5080600c9080519060200190611937929190612fb0565b507fd131ab1e6f279deea74e13a18477e13e2107deb6dc8ae955648948be5841fb46600b600c6040518080602001806020018381038352858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156119ea5780601f106119bf576101008083540402835291602001916119ea565b820191906000526020600020905b8154815290600101906020018083116119cd57829003601f168201915b5050838103825284818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611a6d5780601f10611a4257610100808354040283529160200191611a6d565b820191906000526020600020905b815481529060010190602001808311611a5057829003601f168201915b505094505050505060405180910390a15050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b0357600080fd5b6001600660006101000a81548160ff021916908315150217905550611b26612d0f565b565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115611c5f576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cf3565b611c728382612cd890919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000611e31611f9d565b1515611e405760019050611ea3565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611e8a5760029050611ea3565b6000600a541415611e9e5760039050611ea3565b600490505b90565b60056020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f825780601f10611f5757610100808354040283529160200191611f82565b820191906000526020600020905b815481529060010190602001808311611f6557829003601f168201915b505050505081565b600460149054906101000a900460ff1681565b6000600460149054906101000a900460ff168015611fbf5750611fbe612d88565b5b905090565b600033600460149054906101000a900460ff16151561203657600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561203557600080fd5b5b6120408484612d91565b91505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156120e657600080fd5b505af11580156120fa573d6000803e3d6000fd5b505050506040513d602081101561211057600080fd5b81019080805190602001909291905050509050919050565b600a5481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006121e582600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b612358611f9d565b151561236357600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff16141561238757600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156123e357600080fd5b6004808111156123ef57fe5b6123f7611e27565b600481111561240257fe5b141561240d57600080fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166361d3d7a66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156124d457600080fd5b505af11580156124e8573d6000803e3d6000fd5b505050506040513d60208110156124fe57600080fd5b8101908080519060200190929190505050151561251a57600080fd5b600154600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b2ba0dd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156125a357600080fd5b505af11580156125b7573d6000803e3d6000fd5b505050506040513d60208110156125cd57600080fd5b81019080805190602001909291905050501415156125ea57600080fd5b7f7845d5aa74cc410e35571258d954f23b82276e160fe8c188fa80566580f279cc600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561275e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561279a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff16141561287e57600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156128da57600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561295b57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156129a857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612a3357600080fd5b612a84826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cd890919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b17826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612be882600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cd890919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000828211151515612ce657fe5b818303905092915050565b6000808284019050838110151515612d0557fe5b8091505092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612d6b57600080fd5b6001600460146101000a81548160ff021916908315150217905550565b60006001905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612dce57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612e1b57600080fd5b612e6c826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cd890919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612eff826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cf190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ff157805160ff191683800117855561301f565b8280016001018555821561301f579182015b8281111561301e578251825591602001919060010190613003565b5b50905061302c9190613030565b5090565b61305291905b8082111561304e576000816000905550600101613036565b5090565b905600a165627a7a72305820eebb6746638c69ab873b7c53a020cad124a0e6d2d3b5a8bcb9f6b33dbfed346c0029",
  "sourceMap": "867:2633:17:-;;;717:5:43;694:28;;;;;;;;;;;;;;;;;;;;727:5:32;697:35;;;;;;;;;;;;;;;;;;;;1665:828:17;8:9:-1;5:2;;;30:1;27;20:12;5:2;1665:828:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1794:10;509::139;501:5;;:18;;;;;;;;;;;;;;;;;;1795:14:51;1779:13;;:30;;;;;;;;;;;;;;;;;;1723:91;1963:10:17;1955:5;;:18;;;;;;;;;;;;;;;;;;1989:5;1982:4;:12;;;;;;;;;;;;:::i;:::-;;2010:7;2001:6;:16;;;;;;;;;;;;:::i;:::-;;2041:14;2026:12;:29;;;;2075:9;2064:8;:20;;;;2169:12;;2151:8;:15;2160:5;;;;;;;;;;;2151:15;;;;;;;;;;;;;;;:30;;;;2208:1;2193:12;;:16;2190:65;;;2220:27;2227:5;;;;;;;;;;;2234:12;;2220:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;2190:65;2327:9;2326:10;2323:165;;;2365:4;2347:15;;:22;;;;;;;;;;;;;;;;;;2397:1;2381:12;;:17;2378:103;;;2411:5;;;2378:103;2323:165;1665:828;;;;;867:2633;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "867:2633:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:132:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1718:132:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;697:35:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:35:32;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:18:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1060:18:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1060:18:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:183:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1798:183:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:117:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;640:117:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;371:83:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:83:145;;;;;;;;;;;;;;;;;;;;;;;2758:205:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2758:205:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1362:223:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:20:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1112:20:17;;;;;;;;;;;;;;;;;;;;;;;1081:354:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1081:354:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;799:43:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1513:146:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1909:638:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1909:638:51;;;;;;;;;;;;;;;;;;;;;;;;;;3332:163:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3332:163:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:32:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;831:32:51;;;;;;;;;;;;;;;;;;;;;;;;;;;2600:126:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2600:126:17;;;;;;736:28:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;736:28:51;;;;;;;;;;;;;;;;;;;;;;;;;;;3602:398:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3602:398:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:107:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1189:107:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3359:312:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3359:312:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:47:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;894:47:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:139;;;;;;;;;;;;;;;;;;;;;;;;;;;1085::17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1085:20:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1085:20:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:28:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;694:28:43;;;;;;;;;;;;;;;;;;;;;;;;;;;2829:102:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2829:102:17;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:175:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2577:175:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:107:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;972:107:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:28:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;918:28:51;;;;;;;;;;;;;;;;;;;;;;;539:27:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;539:27:43;;;;;;;;;;;;;;;;;;;;;;;;;;;2883:257:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2883:257:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:700:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2602:700:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:126:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2300:126:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:78:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;625:78:45;;;;;;;;;;;;;;;;;;;;;;;;;;;832:169:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:169:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;3790:162:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3790:162:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:132:43;653:5:139;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;1795:5:43;2341:8;;;;;;;;;;;2325:24;;:12;:24;;;;2322:53;;;2362:5;;;2322:53;1839:5;1816:14;:20;1831:4;1816:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;665:1:139;1718:132:43;;:::o;697:35:32:-;;;;;;;;;;;;;:::o;1060:18:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1798:183:154:-;1865:4;1909:6;1877:7;:19;1885:10;1877:19;;;;;;;;;;;;;;;:29;1897:8;1877:29;;;;;;;;;;;;;;;:38;;;;1942:8;1921:38;;1930:10;1921:38;;;1952:6;1921:38;;;;;;;;;;;;;;;;;;1972:4;1965:11;;1798:183;;;;:::o;640:117:41:-;653:5:139;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;704:5:41;:14;;;719:5;;;;;;;;;;;726:25;745:5;726:18;:25::i;:::-;704:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;704:48:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;704:48:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;704:48:41;;;;;;;;;;;;;;;;;640:117;:::o;371:83:145:-;415:7;437:12;;430:19;;371:83;:::o;2758:205:43:-;2849:12;2833:5;1075:8;;;;;;;;;;;1074:9;1071:93;;;1100:14;:23;1115:7;1100:23;;;;;;;;;;;;;;;;;;;;;;;;;1099:24;1096:61;;;1140:5;;;1096:61;1071:93;2919:38;2938:5;2945:3;2950:6;2919:18;:38::i;:::-;2912:45;;2758:205;;;;;;:::o;1362:223::-;653:5:139;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;1426:5:43;2341:8;;;;;;;;;;;2325:24;;:12;:24;;;;2322:53;;;2362:5;;;2322:53;1575:4;1560:12;;:19;;;;;;;;;;;;;;;;;;665:1:139;1362:223:43;:::o;1112:20:17:-;;;;:::o;1081:354:32:-;1761:10;:22;1772:10;1761:22;;;;;;;;;;;;;;;;;;;;;;;;;1760:23;1757:50;;;1795:5;;;1757:50;1890:15;;;;;;;;;;;1887:25;;;1907:5;;;1887:25;1176:12;;:17;;;;1194:6;1176:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1176:25:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1176:25:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1176:25:32;;;;;;;;;;;;;;;;1161:12;:40;;;;1228:8;:18;1237:8;1228:18;;;;;;;;;;;;;;;;:23;;;;1252:6;1228:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1228:31:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1228:31:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1228:31:32;;;;;;;;;;;;;;;;1207:8;:18;1216:8;1207:18;;;;;;;;;;;;;;;:52;;;;1413:8;1401:29;;1410:1;1401:29;1423:6;1401:29;;;;;;;;;;;;;;;;;;1081:354;;:::o;799:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;1513:146::-;653:5:139;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;1890:15:32;;;;;;;;;;;1887:25;;;1907:5;;;1887:25;1611:5;1592:10;:16;1603:4;1592:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1622:32;1642:4;1648:5;1622:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:146;;:::o;1909:638:51:-;1957:18;1978:17;:15;:17::i;:::-;1957:38;;2017:27;2008:36;;;;;;;;:5;:36;;;;;;;;;:71;;;;2057:22;2048:31;;;;;;;;:5;:31;;;;;;;;;2008:71;2006:74;2003:136;;;2125:5;;;2003:136;2191:1;2182:5;:10;2178:21;;;2194:5;;;2178:21;2231:31;2256:5;2231:8;:20;2240:10;2231:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;2208:8;:20;2217:10;2208:20;;;;;;;;;;;;;;;:54;;;;2328:23;2345:5;2328:12;;:16;;:23;;;;:::i;:::-;2313:12;:38;;;;2375:24;2393:5;2375:13;;:17;;:24;;;;:::i;:::-;2359:13;:40;;;;2451:12;;;;;;;;;;;:24;;;2476:10;2488:5;2451:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2451:43:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2451:43:51;;;;2522:12;;;;;;;;;;;2502:40;;2510:10;2502:40;;;2536:5;2502:40;;;;;;;;;;;;;;;;;;1909:638;;:::o;3332:163:17:-;653:5:139;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;3415:5:17;3408:4;:12;;;;;;;;;;;;:::i;:::-;;3436:7;3427:6;:16;;;;;;;;;;;;:::i;:::-;;3452:37;3476:4;3482:6;3452:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3332:163;;:::o;831:32:51:-;;;;;;;;;;;;;:::o;2600:126:17:-;2520:12:43;;;;;;;;;;;2506:26;;:10;:26;;;;2503:55;;;2545:5;;;2503:55;2681:4:17;2663:15;;:22;;;;;;;;;;;;;;;;;;2692:28;:26;:28::i;:::-;2600:126::o;736:28:51:-;;;;;;;;;;;;;:::o;3602:398:154:-;3685:4;3697:13;3713:7;:19;3721:10;3713:19;;;;;;;;;;;;;;;:29;3733:8;3713:29;;;;;;;;;;;;;;;;3697:45;;3771:8;3752:16;:27;3748:164;;;3821:1;3789:7;:19;3797:10;3789:19;;;;;;;;;;;;;;;:29;3809:8;3789:29;;;;;;;;;;;;;;;:33;;;;3748:164;;;3875:30;3888:16;3875:8;:12;;:30;;;;:::i;:::-;3843:7;:19;3851:10;3843:19;;;;;;;;;;;;;;;:29;3863:8;3843:29;;;;;;;;;;;;;;;:62;;;;3748:164;3938:8;3917:61;;3926:10;3917:61;;;3948:7;:19;3956:10;3948:19;;;;;;;;;;;;;;;:29;3968:8;3948:29;;;;;;;;;;;;;;;;3917:61;;;;;;;;;;;;;;;;;;3991:4;3984:11;;3602:398;;;;;:::o;1189:107:145:-;1245:15;1275:8;:16;1284:6;1275:16;;;;;;;;;;;;;;;;1268:23;;1189:107;;;:::o;3359:312:51:-;3410:12;3434;:10;:12::i;:::-;3433:13;3430:236;;;3455:23;3448:30;;;;3430:236;3517:4;3500:12;;;;;;;;;;;3492:29;;;3489:177;;;3530:28;3523:35;;;;3489:177;3589:1;3572:13;;:18;3569:97;;;3599:27;3592:34;;;;3569:97;3644:22;3637:29;;3359:312;;:::o;894:47:43:-;;;;;;;;;;;;;;;;;;;;;;:::o;238:20:139:-;;;;;;;;;;;;;:::o;1085::17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;694:28:43:-;;;;;;;;;;;;;:::o;2829:102:17:-;2875:4;2895:8;;;;;;;;;;;:30;;;;;2907:18;:16;:18::i;:::-;2895:30;2888:37;;2829:102;:::o;2577:175:43:-;2654:12;2633:10;1075:8;;;;;;;;;;;1074:9;1071:93;;;1100:14;:23;1115:7;1100:23;;;;;;;;;;;;;;;;;;;;;;;;;1099:24;1096:61;;;1140:5;;;1096:61;1071:93;2719:27;2734:3;2739:6;2719:14;:27::i;:::-;2712:34;;2577:175;;;;;:::o;972:107:41:-;1034:4;1053:5;:15;;;1069:4;1053:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1053:21:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1053:21:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1053:21:41;;;;;;;;;;;;;;;;1046:28;;972:107;;;:::o;918:28:51:-;;;;:::o;539:27:43:-;;;;;;;;;;;;;:::o;2883:257:154:-;2961:4;3005:46;3039:11;3005:7;:19;3013:10;3005:19;;;;;;;;;;;;;;;:29;3025:8;3005:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;2973:7;:19;2981:10;2973:19;;;;;;;;;;;;;;;:29;2993:8;2973:29;;;;;;;;;;;;;;;:78;;;;3078:8;3057:61;;3066:10;3057:61;;;3088:7;:19;3096:10;3088:19;;;;;;;;;;;;;;;:29;3108:8;3088:29;;;;;;;;;;;;;;;;3057:61;;;;;;;;;;;;;;;;;;3131:4;3124:11;;2883:257;;;;:::o;2602:700:51:-;2664:12;:10;:12::i;:::-;2663:13;2660:115;;;2761:5;;;2660:115;2796:3;2787:5;:12;;;2783:23;;;2801:5;;;2783:23;2884:13;;;;;;;;;;;2870:27;;:10;:27;;;;2866:38;;;2899:5;;;2866:38;2985:22;2964:43;;;;;;;;:17;:15;:17::i;:::-;:43;;;;;;;;;2960:54;;;3009:5;;;2960:54;3051:5;3023:12;;:34;;;;;;;;;;;;;;;;;;3093:12;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3093:29:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3093:29:51;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3093:29:51;;;;;;;;;;;;;;;;3092:30;3089:40;;;3124:5;;;3089:40;3240:12;;3207;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3207:29:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3207:29:51;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3207:29:51;;;;;;;;;;;;;;;;:45;;3203:56;;;3254:5;;;3203:56;3268:29;3284:12;;;;;;;;;;;3268:29;;;;;;;;;;;;;;;;;;;;;;2602:700;:::o;2300:126:154:-;2374:7;2396;:15;2404:6;2396:15;;;;;;;;;;;;;;;:25;2412:8;2396:25;;;;;;;;;;;;;;;;2389:32;;2300:126;;;;:::o;625:78:45:-;669:10;694:4;687:11;;625:78;:::o;832:169:139:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;965:8;937:37;;958:5;;;;;;;;;;;937:37;;;;;;;;;;;;988:8;980:5;;:16;;;;;;;;;;;;;;;;;;832:169;:::o;3790:162:51:-;3861:3;3851:6;:13;;;3847:24;;;3866:5;;;3847:24;3897:13;;;;;;;;;;;3883:27;;:10;:27;;;;3879:38;;;3912:5;;;3879:38;3941:6;3925:13;;:22;;;;;;;;;;;;;;;;;;3790:162;:::o;736:439:154:-;818:4;853:1;838:17;;:3;:17;;;;830:26;;;;;;;;880:8;:15;889:5;880:15;;;;;;;;;;;;;;;;870:6;:25;;862:34;;;;;;;;920:7;:14;928:5;920:14;;;;;;;;;;;;;;;:26;935:10;920:26;;;;;;;;;;;;;;;;910:6;:36;;902:45;;;;;;;;972:27;992:6;972:8;:15;981:5;972:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;954:8;:15;963:5;954:15;;;;;;;;;;;;;;;:45;;;;1021:25;1039:6;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1005:8;:13;1014:3;1005:13;;;;;;;;;;;;;;;:41;;;;1081:38;1112:6;1081:7;:14;1089:5;1081:14;;;;;;;;;;;;;;;:26;1096:10;1081:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1052:7;:14;1060:5;1052:14;;;;;;;;;;;;;;;:26;1067:10;1052:26;;;;;;;;;;;;;;;:67;;;;1141:3;1125:28;;1134:5;1125:28;;;1146:6;1125:28;;;;;;;;;;;;;;;;;;1166:4;1159:11;;736:439;;;;;:::o;835:110:95:-;893:7;920:1;915;:6;;908:14;;;;;;939:1;935;:5;928:12;;835:110;;;;:::o;1007:129::-;1065:7;1080:9;1096:1;1092;:5;1080:17;;1115:1;1110;:6;;1103:14;;;;;;1130:1;1123:8;;1007:129;;;;;:::o;2093:84:43:-;2520:12;;;;;;;;;;;2506:26;;:10;:26;;;;2503:55;;;2545:5;;;2503:55;2167:4;2156:8;;:15;;;;;;;;;;;;;;;;;;2093:84::o;4052:75:51:-;4098:4;4118;4111:11;;4052:75;:::o;608:379:145:-;671:4;706:1;691:17;;:3;:17;;;;683:26;;;;;;;;733:8;:20;742:10;733:20;;;;;;;;;;;;;;;;723:6;:30;;715:39;;;;;;;;847:32;872:6;847:8;:20;856:10;847:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;824:8;:20;833:10;824:20;;;;;;;;;;;;;;;:55;;;;901:25;919:6;901:8;:13;910:3;901:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;885:8;:13;894:3;885:13;;;;;;;;;;;;;;;:41;;;;953:3;932:33;;941:10;932:33;;;958:6;932:33;;;;;;;;;;;;;;;;;;978:4;971:11;;608:379;;;;:::o;867:2633:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/**\r\n * This smart contract code is Copyright 2017 TokenMarket Ltd. For more information see https://tokenmarket.net\r\n *\r\n * Licensed under the Apache License, version 2.0: https://github.com/TokenMarketNet/ico/blob/master/LICENSE.txt\r\n */\r\n\r\npragma solidity ^0.4.8;\r\n\r\nimport \"./UpgradeableToken.sol\";\r\nimport \"./ReleasableToken.sol\";\r\nimport \"./MintableToken.sol\";\r\n\r\n\r\n/**\r\n * A crowdsaled token.\r\n *\r\n * An ERC-20 token designed specifically for crowdsales with investor protection and further development path.\r\n *\r\n * - The token transfer() is disabled until the crowdsale is over\r\n * - The token contract gives an opt-in upgrade path to a new contract\r\n * - The same token can be part of several crowdsales through approve() mechanism\r\n * - The token can be capped (supply set in the constructor) or uncapped (crowdsale contract can mint new tokens)\r\n *\r\n */\r\ncontract CrowdsaleToken is ReleasableToken, MintableToken, UpgradeableToken {\r\n\r\n  /** Name and symbol were updated. */\r\n  event UpdatedTokenInformation(string newName, string newSymbol);\r\n\r\n  string public name;\r\n\r\n  string public symbol;\r\n\r\n  uint public decimals;\r\n\r\n  /**\r\n   * Construct the token.\r\n   *\r\n   * This token must be created through a team multisig wallet, so that it is owned by that wallet.\r\n   *\r\n   * @param _name Token name\r\n   * @param _symbol Token symbol - should be all caps\r\n   * @param _initialSupply How many tokens we start with\r\n   * @param _decimals Number of decimal places\r\n   * @param _mintable Are new tokens created over the crowdsale or do we distribute only the initial supply? Note that when the token becomes transferable the minting always ends.\r\n   */\r\n  function CrowdsaleToken(string _name, string _symbol, uint _initialSupply, uint _decimals, bool _mintable)\r\n    UpgradeableToken(msg.sender) {\r\n\r\n    // Create any address, can be transferred\r\n    // to team multisig via changeOwner(),\r\n    // also remember to call setUpgradeMaster()\r\n    owner = msg.sender;\r\n\r\n    name = _name;\r\n    symbol = _symbol;\r\n\r\n    totalSupply_ = _initialSupply;\r\n\r\n    decimals = _decimals;\r\n\r\n    // Create initially all balance on the team multisig\r\n    balances[owner] = totalSupply_;\r\n\r\n    if(totalSupply_ > 0) {\r\n      Minted(owner, totalSupply_);\r\n    }\r\n\r\n    // No more new supply allowed after the token creation\r\n    if(!_mintable) {\r\n      mintingFinished = true;\r\n      if(totalSupply_ == 0) {\r\n        throw; // Cannot create a token without supply and no minting\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When token is released to be transferable, enforce no new tokens can be created.\r\n   */\r\n  function releaseTokenTransfer() public onlyReleaseAgent {\r\n    mintingFinished = true;\r\n    super.releaseTokenTransfer();\r\n  }\r\n\r\n  /**\r\n   * Allow upgrade agent functionality kick in only if the crowdsale was success.\r\n   */\r\n  function canUpgrade() public constant returns(bool) {\r\n    return released && super.canUpgrade();\r\n  }\r\n\r\n  /**\r\n   * Owner can update token information here.\r\n   *\r\n   * It is often useful to conceal the actual token association, until\r\n   * the token operations, like central issuance or reissuance have been completed.\r\n   *\r\n   * This function allows the token owner to rename the token after the operations\r\n   * have been completed and then point the audience to use the token contract.\r\n   */\r\n  function setTokenInformation(string _name, string _symbol) onlyOwner {\r\n    name = _name;\r\n    symbol = _symbol;\r\n\r\n    UpdatedTokenInformation(name, symbol);\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "D:\\dev\\tokenmint\\contracts\\tokenmarketnet-contracts\\contracts\\CrowdsaleToken.sol",
  "ast": {
    "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/CrowdsaleToken.sol",
    "exportedSymbols": {
      "CrowdsaleToken": [
        2783
      ]
    },
    "id": 2784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2642,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "243:23:17"
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/UpgradeableToken.sol",
        "file": "./UpgradeableToken.sol",
        "id": 2643,
        "nodeType": "ImportDirective",
        "scope": 2784,
        "sourceUnit": 8614,
        "src": "270:32:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/ReleasableToken.sol",
        "file": "./ReleasableToken.sol",
        "id": 2644,
        "nodeType": "ImportDirective",
        "scope": 2784,
        "sourceUnit": 7332,
        "src": "304:31:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/MintableToken.sol",
        "file": "./MintableToken.sol",
        "id": 2645,
        "nodeType": "ImportDirective",
        "scope": 2784,
        "sourceUnit": 5692,
        "src": "337:29:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2646,
              "name": "ReleasableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7331,
              "src": "894:15:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReleasableToken_$7331",
                "typeString": "contract ReleasableToken"
              }
            },
            "id": 2647,
            "nodeType": "InheritanceSpecifier",
            "src": "894:15:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2648,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5691,
              "src": "911:13:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$5691",
                "typeString": "contract MintableToken"
              }
            },
            "id": 2649,
            "nodeType": "InheritanceSpecifier",
            "src": "911:13:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2650,
              "name": "UpgradeableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8613,
              "src": "926:16:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeableToken_$8613",
                "typeString": "contract UpgradeableToken"
              }
            },
            "id": 2651,
            "nodeType": "InheritanceSpecifier",
            "src": "926:16:17"
          }
        ],
        "contractDependencies": [
          5691,
          7024,
          7331,
          7425,
          8613,
          14560,
          15327,
          15520,
          15552,
          16057
        ],
        "contractKind": "contract",
        "documentation": "A crowdsaled token.\r\n\n * An ERC-20 token designed specifically for crowdsales with investor protection and further development path.\r\n\n * - The token transfer() is disabled until the crowdsale is over\r\n- The token contract gives an opt-in upgrade path to a new contract\r\n- The same token can be part of several crowdsales through approve() mechanism\r\n- The token can be capped (supply set in the constructor) or uncapped (crowdsale contract can mint new tokens)\r\n\n ",
        "fullyImplemented": true,
        "id": 2783,
        "linearizedBaseContracts": [
          2783,
          8613,
          5691,
          7331,
          7425,
          7024,
          14560,
          16057,
          15327,
          15520,
          15552
        ],
        "name": "CrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Name and symbol were updated. ",
            "id": 2657,
            "name": "UpdatedTokenInformation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2653,
                  "indexed": false,
                  "name": "newName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "1020:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2652,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2655,
                  "indexed": false,
                  "name": "newSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "1036:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:34:17"
            },
            "src": "990:64:17"
          },
          {
            "constant": false,
            "id": 2659,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2783,
            "src": "1060:18:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2658,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1060:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2661,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2783,
            "src": "1085:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2660,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1085:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2663,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 2783,
            "src": "1112:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2662,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1112:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2731,
              "nodeType": "Block",
              "src": "1806:687:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2680,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14508,
                      "src": "1955:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2681,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17884,
                        "src": "1963:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1963:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1955:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2684,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:18:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2685,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2659,
                      "src": "1982:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2686,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "1989:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1982:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:12:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2689,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2661,
                      "src": "2001:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2690,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "2010:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2001:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2692,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:16:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2693,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15246,
                      "src": "2026:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2694,
                      "name": "_initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "2041:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2026:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2696,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:29:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2697,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2663,
                      "src": "2064:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2698,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2671,
                      "src": "2075:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2064:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2700,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:20:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2701,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15244,
                        "src": "2151:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2703,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2702,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14508,
                        "src": "2160:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2151:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2704,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15246,
                      "src": "2169:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2151:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2706,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:30:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2707,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15246,
                      "src": "2193:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2208:1:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2193:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2716,
                  "nodeType": "IfStatement",
                  "src": "2190:65:17",
                  "trueBody": {
                    "id": 2715,
                    "nodeType": "Block",
                    "src": "2211:44:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2711,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14508,
                              "src": "2227:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2712,
                              "name": "totalSupply_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15246,
                              "src": "2234:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2710,
                            "name": "Minted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5612,
                            "src": "2220:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2220:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2714,
                        "nodeType": "ExpressionStatement",
                        "src": "2220:27:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2326:10:17",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 2717,
                      "name": "_mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "2327:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2730,
                  "nodeType": "IfStatement",
                  "src": "2323:165:17",
                  "trueBody": {
                    "id": 2729,
                    "nodeType": "Block",
                    "src": "2338:150:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2719,
                            "name": "mintingFinished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5596,
                            "src": "2347:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 2720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2365:4:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2347:22:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2722,
                        "nodeType": "ExpressionStatement",
                        "src": "2347:22:17"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2723,
                            "name": "totalSupply_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15246,
                            "src": "2381:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2397:1:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2381:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2728,
                        "nodeType": "IfStatement",
                        "src": "2378:103:17",
                        "trueBody": {
                          "id": 2727,
                          "nodeType": "Block",
                          "src": "2400:81:17",
                          "statements": [
                            {
                              "id": 2726,
                              "nodeType": "Throw",
                              "src": "2411:5:17"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Construct the token.\r\n\n   * This token must be created through a team multisig wallet, so that it is owned by that wallet.\r\n\n   * @param _name Token name\r\n@param _symbol Token symbol - should be all caps\r\n@param _initialSupply How many tokens we start with\r\n@param _decimals Number of decimal places\r\n@param _mintable Are new tokens created over the crowdsale or do we distribute only the initial supply? Note that when the token becomes transferable the minting always ends.\r",
            "id": 2732,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2676,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17884,
                      "src": "1794:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1794:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2678,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2675,
                  "name": "UpgradeableToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8613,
                  "src": "1777:16:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradeableToken_$8613_$",
                    "typeString": "type(contract UpgradeableToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1777:28:17"
              }
            ],
            "name": "CrowdsaleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2665,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1689:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2667,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1703:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2669,
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1719:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2671,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1740:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "name": "_mintable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1756:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1688:83:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:0:17"
            },
            "scope": 2783,
            "src": "1665:828:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2746,
              "nodeType": "Block",
              "src": "2656:70:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2737,
                      "name": "mintingFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5596,
                      "src": "2663:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2681:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2663:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2740,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:22:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2741,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17950,
                        "src": "2692:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CrowdsaleToken_$2783",
                          "typeString": "contract super CrowdsaleToken"
                        }
                      },
                      "id": 2743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7265,
                      "src": "2692:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2745,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:28:17"
                }
              ]
            },
            "documentation": "When token is released to be transferable, enforce no new tokens can be created.\r",
            "id": 2747,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2735,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2734,
                  "name": "onlyReleaseAgent",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7288,
                  "src": "2639:16:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2639:16:17"
              }
            ],
            "name": "releaseTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2629:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2656:0:17"
            },
            "scope": 2783,
            "src": "2600:126:17",
            "stateMutability": "nonpayable",
            "superFunction": 7265,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2758,
              "nodeType": "Block",
              "src": "2881:50:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2752,
                      "name": "released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7200,
                      "src": "2895:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2753,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17950,
                          "src": "2907:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_CrowdsaleToken_$2783",
                            "typeString": "contract super CrowdsaleToken"
                          }
                        },
                        "id": 2754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canUpgrade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8612,
                        "src": "2907:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2907:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2895:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2751,
                  "id": 2757,
                  "nodeType": "Return",
                  "src": "2888:37:17"
                }
              ]
            },
            "documentation": "Allow upgrade agent functionality kick in only if the crowdsale was success.\r",
            "id": 2759,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "canUpgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2848:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2750,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2759,
                  "src": "2875:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2874:6:17"
            },
            "scope": 2783,
            "src": "2829:102:17",
            "stateMutability": "view",
            "superFunction": 8612,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2781,
              "nodeType": "Block",
              "src": "3401:94:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2768,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2659,
                      "src": "3408:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2769,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2761,
                      "src": "3415:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3408:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "3408:12:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2772,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2661,
                      "src": "3427:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2773,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2763,
                      "src": "3436:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3427:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2775,
                  "nodeType": "ExpressionStatement",
                  "src": "3427:16:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2777,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2659,
                        "src": "3476:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2778,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2661,
                        "src": "3482:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 2776,
                      "name": "UpdatedTokenInformation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2657,
                      "src": "3452:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 2779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3452:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2780,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:37:17"
                }
              ]
            },
            "documentation": "Owner can update token information here.\r\n\n   * It is often useful to conceal the actual token association, until\r\nthe token operations, like central issuance or reissuance have been completed.\r\n\n   * This function allows the token owner to rename the token after the operations\r\nhave been completed and then point the audience to use the token contract.\r",
            "id": 2782,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2766,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2765,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14534,
                  "src": "3391:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3391:9:17"
              }
            ],
            "name": "setTokenInformation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2761,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "3361:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3361:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2763,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "3375:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2762,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3375:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3360:30:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3401:0:17"
            },
            "scope": 2783,
            "src": "3332:163:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2784,
        "src": "867:2633:17"
      }
    ],
    "src": "243:3259:17"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/CrowdsaleToken.sol",
    "exportedSymbols": {
      "CrowdsaleToken": [
        2783
      ]
    },
    "id": 2784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2642,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "243:23:17"
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/UpgradeableToken.sol",
        "file": "./UpgradeableToken.sol",
        "id": 2643,
        "nodeType": "ImportDirective",
        "scope": 2784,
        "sourceUnit": 8614,
        "src": "270:32:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/ReleasableToken.sol",
        "file": "./ReleasableToken.sol",
        "id": 2644,
        "nodeType": "ImportDirective",
        "scope": 2784,
        "sourceUnit": 7332,
        "src": "304:31:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/MintableToken.sol",
        "file": "./MintableToken.sol",
        "id": 2645,
        "nodeType": "ImportDirective",
        "scope": 2784,
        "sourceUnit": 5692,
        "src": "337:29:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2646,
              "name": "ReleasableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7331,
              "src": "894:15:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReleasableToken_$7331",
                "typeString": "contract ReleasableToken"
              }
            },
            "id": 2647,
            "nodeType": "InheritanceSpecifier",
            "src": "894:15:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2648,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5691,
              "src": "911:13:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$5691",
                "typeString": "contract MintableToken"
              }
            },
            "id": 2649,
            "nodeType": "InheritanceSpecifier",
            "src": "911:13:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2650,
              "name": "UpgradeableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8613,
              "src": "926:16:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeableToken_$8613",
                "typeString": "contract UpgradeableToken"
              }
            },
            "id": 2651,
            "nodeType": "InheritanceSpecifier",
            "src": "926:16:17"
          }
        ],
        "contractDependencies": [
          5691,
          7024,
          7331,
          7425,
          8613,
          14560,
          15327,
          15520,
          15552,
          16057
        ],
        "contractKind": "contract",
        "documentation": "A crowdsaled token.\r\n\n * An ERC-20 token designed specifically for crowdsales with investor protection and further development path.\r\n\n * - The token transfer() is disabled until the crowdsale is over\r\n- The token contract gives an opt-in upgrade path to a new contract\r\n- The same token can be part of several crowdsales through approve() mechanism\r\n- The token can be capped (supply set in the constructor) or uncapped (crowdsale contract can mint new tokens)\r\n\n ",
        "fullyImplemented": true,
        "id": 2783,
        "linearizedBaseContracts": [
          2783,
          8613,
          5691,
          7331,
          7425,
          7024,
          14560,
          16057,
          15327,
          15520,
          15552
        ],
        "name": "CrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Name and symbol were updated. ",
            "id": 2657,
            "name": "UpdatedTokenInformation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2653,
                  "indexed": false,
                  "name": "newName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "1020:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2652,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2655,
                  "indexed": false,
                  "name": "newSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2657,
                  "src": "1036:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:34:17"
            },
            "src": "990:64:17"
          },
          {
            "constant": false,
            "id": 2659,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2783,
            "src": "1060:18:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2658,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1060:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2661,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2783,
            "src": "1085:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2660,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1085:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2663,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 2783,
            "src": "1112:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2662,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1112:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2731,
              "nodeType": "Block",
              "src": "1806:687:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2680,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14508,
                      "src": "1955:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2681,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17884,
                        "src": "1963:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1963:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1955:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2684,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:18:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2685,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2659,
                      "src": "1982:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2686,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "1989:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1982:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:12:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2689,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2661,
                      "src": "2001:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2690,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "2010:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2001:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2692,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:16:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2693,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15246,
                      "src": "2026:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2694,
                      "name": "_initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "2041:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2026:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2696,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:29:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2697,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2663,
                      "src": "2064:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2698,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2671,
                      "src": "2075:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2064:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2700,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:20:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2701,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15244,
                        "src": "2151:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2703,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2702,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14508,
                        "src": "2160:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2151:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2704,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15246,
                      "src": "2169:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2151:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2706,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:30:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2707,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15246,
                      "src": "2193:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2208:1:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2193:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2716,
                  "nodeType": "IfStatement",
                  "src": "2190:65:17",
                  "trueBody": {
                    "id": 2715,
                    "nodeType": "Block",
                    "src": "2211:44:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2711,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14508,
                              "src": "2227:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2712,
                              "name": "totalSupply_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15246,
                              "src": "2234:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2710,
                            "name": "Minted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5612,
                            "src": "2220:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2220:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2714,
                        "nodeType": "ExpressionStatement",
                        "src": "2220:27:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2326:10:17",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 2717,
                      "name": "_mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "2327:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2730,
                  "nodeType": "IfStatement",
                  "src": "2323:165:17",
                  "trueBody": {
                    "id": 2729,
                    "nodeType": "Block",
                    "src": "2338:150:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2719,
                            "name": "mintingFinished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5596,
                            "src": "2347:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 2720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2365:4:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2347:22:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2722,
                        "nodeType": "ExpressionStatement",
                        "src": "2347:22:17"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2723,
                            "name": "totalSupply_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15246,
                            "src": "2381:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2397:1:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2381:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2728,
                        "nodeType": "IfStatement",
                        "src": "2378:103:17",
                        "trueBody": {
                          "id": 2727,
                          "nodeType": "Block",
                          "src": "2400:81:17",
                          "statements": [
                            {
                              "id": 2726,
                              "nodeType": "Throw",
                              "src": "2411:5:17"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Construct the token.\r\n\n   * This token must be created through a team multisig wallet, so that it is owned by that wallet.\r\n\n   * @param _name Token name\r\n@param _symbol Token symbol - should be all caps\r\n@param _initialSupply How many tokens we start with\r\n@param _decimals Number of decimal places\r\n@param _mintable Are new tokens created over the crowdsale or do we distribute only the initial supply? Note that when the token becomes transferable the minting always ends.\r",
            "id": 2732,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2676,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17884,
                      "src": "1794:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1794:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2678,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2675,
                  "name": "UpgradeableToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8613,
                  "src": "1777:16:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradeableToken_$8613_$",
                    "typeString": "type(contract UpgradeableToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1777:28:17"
              }
            ],
            "name": "CrowdsaleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2665,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1689:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2667,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1703:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2669,
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1719:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2671,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1740:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "name": "_mintable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "1756:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1688:83:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:0:17"
            },
            "scope": 2783,
            "src": "1665:828:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2746,
              "nodeType": "Block",
              "src": "2656:70:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2737,
                      "name": "mintingFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5596,
                      "src": "2663:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2681:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2663:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2740,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:22:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2741,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17950,
                        "src": "2692:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_CrowdsaleToken_$2783",
                          "typeString": "contract super CrowdsaleToken"
                        }
                      },
                      "id": 2743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7265,
                      "src": "2692:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2745,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:28:17"
                }
              ]
            },
            "documentation": "When token is released to be transferable, enforce no new tokens can be created.\r",
            "id": 2747,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2735,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2734,
                  "name": "onlyReleaseAgent",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7288,
                  "src": "2639:16:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2639:16:17"
              }
            ],
            "name": "releaseTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2629:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2656:0:17"
            },
            "scope": 2783,
            "src": "2600:126:17",
            "stateMutability": "nonpayable",
            "superFunction": 7265,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2758,
              "nodeType": "Block",
              "src": "2881:50:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2752,
                      "name": "released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7200,
                      "src": "2895:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2753,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17950,
                          "src": "2907:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_CrowdsaleToken_$2783",
                            "typeString": "contract super CrowdsaleToken"
                          }
                        },
                        "id": 2754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canUpgrade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8612,
                        "src": "2907:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2907:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2895:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2751,
                  "id": 2757,
                  "nodeType": "Return",
                  "src": "2888:37:17"
                }
              ]
            },
            "documentation": "Allow upgrade agent functionality kick in only if the crowdsale was success.\r",
            "id": 2759,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "canUpgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2848:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2750,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2759,
                  "src": "2875:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2874:6:17"
            },
            "scope": 2783,
            "src": "2829:102:17",
            "stateMutability": "view",
            "superFunction": 8612,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2781,
              "nodeType": "Block",
              "src": "3401:94:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2768,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2659,
                      "src": "3408:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2769,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2761,
                      "src": "3415:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3408:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "3408:12:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2772,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2661,
                      "src": "3427:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2773,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2763,
                      "src": "3436:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3427:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2775,
                  "nodeType": "ExpressionStatement",
                  "src": "3427:16:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2777,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2659,
                        "src": "3476:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2778,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2661,
                        "src": "3482:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 2776,
                      "name": "UpdatedTokenInformation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2657,
                      "src": "3452:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 2779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3452:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2780,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:37:17"
                }
              ]
            },
            "documentation": "Owner can update token information here.\r\n\n   * It is often useful to conceal the actual token association, until\r\nthe token operations, like central issuance or reissuance have been completed.\r\n\n   * This function allows the token owner to rename the token after the operations\r\nhave been completed and then point the audience to use the token contract.\r",
            "id": 2782,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2766,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2765,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14534,
                  "src": "3391:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3391:9:17"
              }
            ],
            "name": "setTokenInformation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2761,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "3361:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3361:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2763,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "3375:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2762,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3375:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3360:30:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3401:0:17"
            },
            "scope": 2783,
            "src": "3332:163:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2784,
        "src": "867:2633:17"
      }
    ],
    "src": "243:3259:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-07T11:58:33.940Z"
}