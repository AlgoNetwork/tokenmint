{
  "contractName": "Recoverable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokensToBeReturned",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610586806100606000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806316114acd146100675780638da5cb5b146100aa578063c45d19db14610101578063f2fde38b14610158575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100bf610301565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010d57600080fd5b50610142600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610326565b6040518082815260200191505060405180910390f35b34801561016457600080fd5b50610199600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610405565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101f657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661023d84610326565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b505050506040513d60208110156102ec57600080fd5b81019080805190602001909291905050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d60208110156103ed57600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561046057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561049c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582047b507247458689685863154c29e15e866fd2f24b175a2c838337a58114ae39e0029",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806316114acd146100675780638da5cb5b146100aa578063c45d19db14610101578063f2fde38b14610158575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100bf610301565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010d57600080fd5b50610142600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610326565b6040518082815260200191505060405180910390f35b34801561016457600080fd5b50610199600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610405565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101f657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661023d84610326565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b505050506040513d60208110156102ec57600080fd5b81019080805190602001909291905050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d60208110156103ed57600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561046057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561049c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582047b507247458689685863154c29e15e866fd2f24b175a2c838337a58114ae39e0029",
  "sourceMap": "375:706:25:-;;;451:28;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:28:25;509:10:35;501:5;;:18;;;;;;;;;;;;;;;;;;375:706:25;;;;;;",
  "deployedSourceMap": "375:706:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;640:117:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;972:107:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;972:107:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:169:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:169:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:117:25;653:5:35;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;704:5:25;:14;;;719:5;;;;;;;;;;;726:25;745:5;726:18;:25::i;:::-;704:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;704:48:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;704:48:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;704:48:25;;;;;;;;;;;;;;;;;640:117;:::o;238:20:35:-;;;;;;;;;;;;;:::o;972:107:25:-;1034:4;1053:5;:15;;;1069:4;1053:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1053:21:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1053:21:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1053:21:25;;;;;;;;;;;;;;;;1046:28;;972:107;;;:::o;832:169:35:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;965:8;937:37;;958:5;;;;;;;;;;;937:37;;;;;;;;;;;;988:8;980:5;;:16;;;;;;;;;;;;;;;;;;832:169;:::o",
  "source": "/**\n * This smart contract code is Copyright 2017 TokenMarket Ltd. For more information see https://tokenmarket.net\n *\n * Licensed under the Apache License, version 2.0: https://github.com/TokenMarketNet/ico/blob/master/LICENSE.txt\n */\n\npragma solidity ^0.4.12;\n\nimport \"./zeppelin/contracts/ownership/Ownable.sol\";\nimport \"./zeppelin/contracts/token/ERC20/ERC20Basic.sol\";\n\ncontract Recoverable is Ownable {\n\n  /// @dev Empty constructor (for now)\n  function Recoverable() {\n  }\n\n  /// @dev This will be invoked by the owner, when owner wants to rescue tokens\n  /// @param token Token which will we rescue to the owner from the contract\n  function recoverTokens(ERC20Basic token) onlyOwner public {\n    token.transfer(owner, tokensToBeReturned(token));\n  }\n\n  /// @dev Interface function, can be overwritten by the superclass\n  /// @param token Token which balance we will check and return\n  /// @return The amount of tokens (in smallest denominator) the contract owns\n  function tokensToBeReturned(ERC20Basic token) public returns (uint) {\n    return token.balanceOf(this);\n  }\n}\n",
  "sourcePath": "D:\\dev\\tokenmint\\contracts\\tokenmarketnet-contracts\\contracts\\Recoverable.sol",
  "ast": {
    "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/Recoverable.sol",
    "exportedSymbols": {
      "Recoverable": [
        4073
      ]
    },
    "id": 4074,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4034,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "237:24:25"
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/ownership/Ownable.sol",
        "file": "./zeppelin/contracts/ownership/Ownable.sol",
        "id": 4035,
        "nodeType": "ImportDirective",
        "scope": 4074,
        "sourceUnit": 5286,
        "src": "263:52:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/token/ERC20/ERC20Basic.sol",
        "file": "./zeppelin/contracts/token/ERC20/ERC20Basic.sol",
        "id": 4036,
        "nodeType": "ImportDirective",
        "scope": 4074,
        "sourceUnit": 5457,
        "src": "316:57:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4037,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5285,
              "src": "399:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5285",
                "typeString": "contract Ownable"
              }
            },
            "id": 4038,
            "nodeType": "InheritanceSpecifier",
            "src": "399:7:25"
          }
        ],
        "contractDependencies": [
          5285
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4073,
        "linearizedBaseContracts": [
          4073,
          5285
        ],
        "name": "Recoverable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4041,
              "nodeType": "Block",
              "src": "474:5:25",
              "statements": []
            },
            "documentation": "@dev Empty constructor (for now)",
            "id": 4042,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Recoverable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 4040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:0:25"
            },
            "scope": 4073,
            "src": "451:28:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4058,
              "nodeType": "Block",
              "src": "698:59:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4052,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5233,
                        "src": "719:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4054,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4044,
                            "src": "745:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                              "typeString": "contract ERC20Basic"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                              "typeString": "contract ERC20Basic"
                            }
                          ],
                          "id": 4053,
                          "name": "tokensToBeReturned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4072,
                          "src": "726:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$5456_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20Basic) returns (uint256)"
                          }
                        },
                        "id": 4055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "726:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4049,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4044,
                        "src": "704:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 4051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5447,
                      "src": "704:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:48:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4057,
                  "nodeType": "ExpressionStatement",
                  "src": "704:48:25"
                }
              ]
            },
            "documentation": "@dev This will be invoked by the owner, when owner wants to rescue tokens\n @param token Token which will we rescue to the owner from the contract",
            "id": 4059,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4047,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4046,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5259,
                  "src": "681:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "681:9:25"
              }
            ],
            "name": "recoverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4044,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4059,
                  "src": "663:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4043,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5456,
                    "src": "663:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "662:18:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 4048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "698:0:25"
            },
            "scope": 4073,
            "src": "640:117:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4071,
              "nodeType": "Block",
              "src": "1040:39:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4068,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5744,
                        "src": "1069:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Recoverable_$4073",
                          "typeString": "contract Recoverable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Recoverable_$4073",
                          "typeString": "contract Recoverable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4066,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4061,
                        "src": "1053:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 4067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5438,
                      "src": "1053:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4065,
                  "id": 4070,
                  "nodeType": "Return",
                  "src": "1046:28:25"
                }
              ]
            },
            "documentation": "@dev Interface function, can be overwritten by the superclass\n @param token Token which balance we will check and return\n @return The amount of tokens (in smallest denominator) the contract owns",
            "id": 4072,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "tokensToBeReturned",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4061,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4072,
                  "src": "1000:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4060,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5456,
                    "src": "1000:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "999:18:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 4065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4064,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4072,
                  "src": "1034:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4063,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1033:6:25"
            },
            "scope": 4073,
            "src": "972:107:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4074,
        "src": "375:706:25"
      }
    ],
    "src": "237:845:25"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/Recoverable.sol",
    "exportedSymbols": {
      "Recoverable": [
        4073
      ]
    },
    "id": 4074,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4034,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "237:24:25"
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/ownership/Ownable.sol",
        "file": "./zeppelin/contracts/ownership/Ownable.sol",
        "id": 4035,
        "nodeType": "ImportDirective",
        "scope": 4074,
        "sourceUnit": 5286,
        "src": "263:52:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/token/ERC20/ERC20Basic.sol",
        "file": "./zeppelin/contracts/token/ERC20/ERC20Basic.sol",
        "id": 4036,
        "nodeType": "ImportDirective",
        "scope": 4074,
        "sourceUnit": 5457,
        "src": "316:57:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4037,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5285,
              "src": "399:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5285",
                "typeString": "contract Ownable"
              }
            },
            "id": 4038,
            "nodeType": "InheritanceSpecifier",
            "src": "399:7:25"
          }
        ],
        "contractDependencies": [
          5285
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4073,
        "linearizedBaseContracts": [
          4073,
          5285
        ],
        "name": "Recoverable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4041,
              "nodeType": "Block",
              "src": "474:5:25",
              "statements": []
            },
            "documentation": "@dev Empty constructor (for now)",
            "id": 4042,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Recoverable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 4040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:0:25"
            },
            "scope": 4073,
            "src": "451:28:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4058,
              "nodeType": "Block",
              "src": "698:59:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4052,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5233,
                        "src": "719:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4054,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4044,
                            "src": "745:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                              "typeString": "contract ERC20Basic"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                              "typeString": "contract ERC20Basic"
                            }
                          ],
                          "id": 4053,
                          "name": "tokensToBeReturned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4072,
                          "src": "726:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$5456_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20Basic) returns (uint256)"
                          }
                        },
                        "id": 4055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "726:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4049,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4044,
                        "src": "704:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 4051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5447,
                      "src": "704:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:48:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4057,
                  "nodeType": "ExpressionStatement",
                  "src": "704:48:25"
                }
              ]
            },
            "documentation": "@dev This will be invoked by the owner, when owner wants to rescue tokens\n @param token Token which will we rescue to the owner from the contract",
            "id": 4059,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4047,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4046,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5259,
                  "src": "681:9:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "681:9:25"
              }
            ],
            "name": "recoverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4044,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4059,
                  "src": "663:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4043,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5456,
                    "src": "663:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "662:18:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 4048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "698:0:25"
            },
            "scope": 4073,
            "src": "640:117:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4071,
              "nodeType": "Block",
              "src": "1040:39:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4068,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5744,
                        "src": "1069:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Recoverable_$4073",
                          "typeString": "contract Recoverable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Recoverable_$4073",
                          "typeString": "contract Recoverable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4066,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4061,
                        "src": "1053:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 4067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5438,
                      "src": "1053:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4065,
                  "id": 4070,
                  "nodeType": "Return",
                  "src": "1046:28:25"
                }
              ]
            },
            "documentation": "@dev Interface function, can be overwritten by the superclass\n @param token Token which balance we will check and return\n @return The amount of tokens (in smallest denominator) the contract owns",
            "id": 4072,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "tokensToBeReturned",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4061,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4072,
                  "src": "1000:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4060,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5456,
                    "src": "1000:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$5456",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "999:18:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 4065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4064,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4072,
                  "src": "1034:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4063,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1033:6:25"
            },
            "scope": 4073,
            "src": "972:107:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4074,
        "src": "375:706:25"
      }
    ],
    "src": "237:845:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-07T16:59:41.025Z"
}