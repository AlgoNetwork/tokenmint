{
  "contractName": "TokenMintERC20Mock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport '../../../node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol';\r\n\r\n/**\r\n * @title Used only to reference imported file so that ERC20Mock would be\r\n * compiled and later used in contract tests\r\n *\r\n * @author TokenMint.io\r\n *\r\n */\r\ncontract TokenMintERC20Mock is ERC20Mock {\r\n}\r\n",
  "sourcePath": "D:\\trees\\tokenmint\\contracts\\ERC20\\openzeppelin_test_reference\\TokenMintERC20Mock.sol",
  "ast": {
    "absolutePath": "/D/trees/tokenmint/contracts/ERC20/openzeppelin_test_reference/TokenMintERC20Mock.sol",
    "exportedSymbols": {
      "TokenMintERC20Mock": [
        81
      ]
    },
    "id": 82,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 77,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/D/trees/tokenmint/node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol",
        "file": "../../../node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol",
        "id": 78,
        "nodeType": "ImportDirective",
        "scope": 82,
        "sourceUnit": 17358,
        "src": "28:83:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 79,
              "name": "ERC20Mock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17357,
              "src": "310:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$17357",
                "typeString": "contract ERC20Mock"
              }
            },
            "id": 80,
            "nodeType": "InheritanceSpecifier",
            "src": "310:9:1"
          }
        ],
        "contractDependencies": [
          17357,
          17801,
          17870
        ],
        "contractKind": "contract",
        "documentation": "@title Used only to reference imported file so that ERC20Mock would be\r\ncompiled and later used in contract tests\r\n\n * @author TokenMint.io\r\n\n ",
        "fullyImplemented": false,
        "id": 81,
        "linearizedBaseContracts": [
          81,
          17357,
          17801,
          17870
        ],
        "name": "TokenMintERC20Mock",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 82,
        "src": "279:45:1"
      }
    ],
    "src": "0:326:1"
  },
  "legacyAST": {
    "absolutePath": "/D/trees/tokenmint/contracts/ERC20/openzeppelin_test_reference/TokenMintERC20Mock.sol",
    "exportedSymbols": {
      "TokenMintERC20Mock": [
        81
      ]
    },
    "id": 82,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 77,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/D/trees/tokenmint/node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol",
        "file": "../../../node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol",
        "id": 78,
        "nodeType": "ImportDirective",
        "scope": 82,
        "sourceUnit": 17358,
        "src": "28:83:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 79,
              "name": "ERC20Mock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17357,
              "src": "310:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$17357",
                "typeString": "contract ERC20Mock"
              }
            },
            "id": 80,
            "nodeType": "InheritanceSpecifier",
            "src": "310:9:1"
          }
        ],
        "contractDependencies": [
          17357,
          17801,
          17870
        ],
        "contractKind": "contract",
        "documentation": "@title Used only to reference imported file so that ERC20Mock would be\r\ncompiled and later used in contract tests\r\n\n * @author TokenMint.io\r\n\n ",
        "fullyImplemented": false,
        "id": 81,
        "linearizedBaseContracts": [
          81,
          17357,
          17801,
          17870
        ],
        "name": "TokenMintERC20Mock",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 82,
        "src": "279:45:1"
      }
    ],
    "src": "0:326:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-10T14:03:30.240Z"
}