{
  "contractName": "TestMigrationTarget",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "originalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isUpgradeAgent",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oldToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokensToBeReturned",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isToken",
      "outputs": [
        {
          "name": "weAre",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_oldToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "upgradeFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080611b588339810180604052810190808051906020019092919050505033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156100fb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561015f57600080fd5b505af1158015610173573d6000803e3d6000fd5b505050506040513d602081101561018957600080fd5b8101908080519060200190929190505050600681905550600060065414156101b057600080fd5b50611998806101c06000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100f657806316114acd1461015b57806318160ddd1461019e57806323b872dd146101c95780634b2ba0dd1461024e57806361d3d7a61461027957806366188463146102a857806370a082311461030d578063753e88e5146103645780638da5cb5b146103b1578063a9059cbb14610408578063b31c710a1461046d578063c45d19db146104c4578063d73dd6231461051b578063dd62ed3e14610580578063eefa597b146105f7578063f2fde38b14610626575b600080fd5b34801561010257600080fd5b50610141600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610669565b604051808215151515815260200191505060405180910390f35b34801561016757600080fd5b5061019c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061075b565b005b3480156101aa57600080fd5b506101b36108c3565b6040518082815260200191505060405180910390f35b3480156101d557600080fd5b50610234600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108cd565b604051808215151515815260200191505060405180910390f35b34801561025a57600080fd5b50610263610c87565b6040518082815260200191505060405180910390f35b34801561028557600080fd5b5061028e610c8d565b604051808215151515815260200191505060405180910390f35b3480156102b457600080fd5b506102f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c96565b604051808215151515815260200191505060405180910390f35b34801561031957600080fd5b5061034e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f27565b6040518082815260200191505060405180910390f35b34801561037057600080fd5b506103af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6f565b005b3480156103bd57600080fd5b506103c6611207565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041457600080fd5b50610453600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061122d565b604051808215151515815260200191505060405180910390f35b34801561047957600080fd5b5061048261144c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104d057600080fd5b50610505600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611472565b6040518082815260200191505060405180910390f35b34801561052757600080fd5b50610566600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611551565b604051808215151515815260200191505060405180910390f35b34801561058c57600080fd5b506105e1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061174d565b6040518082815260200191505060405180910390f35b34801561060357600080fd5b5061060c6117d4565b604051808215151515815260200191505060405180910390f35b34801561063257600080fd5b50610667600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117dd565b005b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107b757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166107ff84611472565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561088457600080fd5b505af1158015610898573d6000803e3d6000fd5b505050506040513d60208110156108ae57600080fd5b81019080805190602001909291905050505050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561090a57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561095757600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156109e257600080fd5b610a33826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461193590919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ac6826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461194e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b9782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461193590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60065481565b60006001905090565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610da7576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e3b565b610dba838261193590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fcb57600080fd5b60015473__SafeMathLib___________________________6366098d4f9091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b15801561104257600080fd5b505af4158015611056573d6000803e3d6000fd5b505050506040513d602081101561106c57600080fd5b81019080805190602001909291905050506001819055506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205473__SafeMathLib___________________________6366098d4f9091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b15801561113657600080fd5b505af415801561114a573d6000803e3d6000fd5b505050506040513d602081101561116057600080fd5b81019080805190602001909291905050506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561126a57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156112b757600080fd5b611308826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461193590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061139b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461194e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561150f57600080fd5b505af1158015611523573d6000803e3d6000fd5b505050506040513d602081101561153957600080fd5b81019080805190602001909291905050509050919050565b60006115e282600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461194e90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561183957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561187557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561194357fe5b818303905092915050565b600080828401905083811015151561196257fe5b80915050929150505600a165627a7a7230582065c1a43ada52dbd6f98d1ae3f6a3411e7fe22bdd817e0806dfd32985b8330f8d0029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100f657806316114acd1461015b57806318160ddd1461019e57806323b872dd146101c95780634b2ba0dd1461024e57806361d3d7a61461027957806366188463146102a857806370a082311461030d578063753e88e5146103645780638da5cb5b146103b1578063a9059cbb14610408578063b31c710a1461046d578063c45d19db146104c4578063d73dd6231461051b578063dd62ed3e14610580578063eefa597b146105f7578063f2fde38b14610626575b600080fd5b34801561010257600080fd5b50610141600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610669565b604051808215151515815260200191505060405180910390f35b34801561016757600080fd5b5061019c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061075b565b005b3480156101aa57600080fd5b506101b36108c3565b6040518082815260200191505060405180910390f35b3480156101d557600080fd5b50610234600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108cd565b604051808215151515815260200191505060405180910390f35b34801561025a57600080fd5b50610263610c87565b6040518082815260200191505060405180910390f35b34801561028557600080fd5b5061028e610c8d565b604051808215151515815260200191505060405180910390f35b3480156102b457600080fd5b506102f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c96565b604051808215151515815260200191505060405180910390f35b34801561031957600080fd5b5061034e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f27565b6040518082815260200191505060405180910390f35b34801561037057600080fd5b506103af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6f565b005b3480156103bd57600080fd5b506103c6611207565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041457600080fd5b50610453600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061122d565b604051808215151515815260200191505060405180910390f35b34801561047957600080fd5b5061048261144c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104d057600080fd5b50610505600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611472565b6040518082815260200191505060405180910390f35b34801561052757600080fd5b50610566600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611551565b604051808215151515815260200191505060405180910390f35b34801561058c57600080fd5b506105e1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061174d565b6040518082815260200191505060405180910390f35b34801561060357600080fd5b5061060c6117d4565b604051808215151515815260200191505060405180910390f35b34801561063257600080fd5b50610667600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117dd565b005b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107b757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166107ff84611472565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561088457600080fd5b505af1158015610898573d6000803e3d6000fd5b505050506040513d60208110156108ae57600080fd5b81019080805190602001909291905050505050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561090a57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561095757600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156109e257600080fd5b610a33826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461193590919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ac6826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461194e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b9782600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461193590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b60065481565b60006001905090565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610da7576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e3b565b610dba838261193590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fcb57600080fd5b60015473__SafeMathLib___________________________6366098d4f9091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b15801561104257600080fd5b505af4158015611056573d6000803e3d6000fd5b505050506040513d602081101561106c57600080fd5b81019080805190602001909291905050506001819055506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205473__SafeMathLib___________________________6366098d4f9091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b15801561113657600080fd5b505af415801561114a573d6000803e3d6000fd5b505050506040513d602081101561116057600080fd5b81019080805190602001909291905050506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561126a57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156112b757600080fd5b611308826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461193590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061139b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461194e90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561150f57600080fd5b505af1158015611523573d6000803e3d6000fd5b505050506040513d602081101561153957600080fd5b81019080805190602001909291905050509050919050565b60006115e282600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461194e90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561183957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561187557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561194357fe5b818303905092915050565b600080828401905083811015151561196257fe5b80915050929150505600a165627a7a7230582065c1a43ada52dbd6f98d1ae3f6a3411e7fe22bdd817e0806dfd32985b8330f8d0029",
  "sourceMap": "269:894:67:-;;;444:339;8:9:-1;5:2;;;30:1;27;20:12;5:2;444:339:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:10:139;521:5;;:18;;;;;;;;;;;;;;;;;;:9:67;510:8;;:20;;;;;;;;;;;;;;;;;;599:1;586:8;;;;;;;;;;;578:22;;;575:49;;;611:5;;;575:49;702:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;702:23:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;702:23:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;702:23:67;;;;;;;;;;;;;;;;685:14;:40;;;;753:1;735:14;;:19;732:46;;;765:5;;;732:46;444:339;269:894;;;;;;",
  "deployedSourceMap": "269:894:67:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:5;;;1844:187:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1844:187:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:119:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:119:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:85:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;392:85:145;;;;;;;;;;;;;;;;;;;;;;;760:449:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;760:449:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:26:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;411:26:67;;;;;;;;;;;;;;;;;;;;;;;581:81:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:81:50;;;;;;;;;;;;;;;;;;;;;;;;;;;3690:407:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3690:407:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1235:109:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1235:109:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:319:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;789:319:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:20:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:20:139;;;;;;;;;;;;;;;;;;;;;;;;;;;638:388:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;638:388:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;372:32:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;372:32:67;;;;;;;;;;;;;;;;;;;;;;;;;;;998:109:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;998:109:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2955:261:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2955:261:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2358:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2358:128:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:80:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:80:45;;;;;;;;;;;;;;;;;;;;;;;;;;;867:173:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;867:173:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:187:154;1911:4;1956:6;1924:7;:19;1932:10;1924:19;;;;;;;;;;;;;;;:29;1944:8;1924:29;;;;;;;;;;;;;;;:38;;;;1990:8;1969:38;;1978:10;1969:38;;;2000:6;1969:38;;;;;;;;;;;;;;;;;;2021:4;2014:11;;1844:187;;;;:::o;659:119:41:-;680:5:139;;;;;;;;;;;666:19;;:10;:19;;;658:28;;;;;;;;724:5:41;:14;;;739:5;;;;;;;;;;;746:25;765:5;746:18;:25::i;:::-;724:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;724:48:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;724:48:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;724:48:41;;;;;;;;;;;;;;;;;659:119;:::o;392:85:145:-;436:7;459:12;;452:19;;392:85;:::o;760:449:154:-;842:4;878:1;863:17;;:3;:17;;;;855:26;;;;;;;;906:8;:15;915:5;906:15;;;;;;;;;;;;;;;;896:6;:25;;888:34;;;;;;;;947:7;:14;955:5;947:14;;;;;;;;;;;;;;;:26;962:10;947:26;;;;;;;;;;;;;;;;937:6;:36;;929:45;;;;;;;;1001:27;1021:6;1001:8;:15;1010:5;1001:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;983:8;:15;992:5;983:15;;;;;;;;;;;;;;;:45;;;;1051:25;1069:6;1051:8;:13;1060:3;1051:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1035:8;:13;1044:3;1035:13;;;;;;;;;;;;;;;:41;;;;1112:38;1143:6;1112:7;:14;1120:5;1112:14;;;;;;;;;;;;;;;:26;1127:10;1112:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1083:7;:14;1091:5;1083:14;;;;;;;;;;;;;;;:26;1098:10;1083:26;;;;;;;;;;;;;;;:67;;;;1173:3;1157:28;;1166:5;1157:28;;;1178:6;1157:28;;;;;;;;;;;;;;;;;;1199:4;1192:11;;760:449;;;;;:::o;411:26:67:-;;;;:::o;581:81:50:-;632:4;652;645:11;;581:81;:::o;3690:407:154:-;3773:4;3786:13;3802:7;:19;3810:10;3802:19;;;;;;;;;;;;;;;:29;3822:8;3802:29;;;;;;;;;;;;;;;;3786:45;;3861:8;3842:16;:27;3838:168;;;3912:1;3880:7;:19;3888:10;3880:19;;;;;;;;;;;;;;;:29;3900:8;3880:29;;;;;;;;;;;;;;;:33;;;;3838:168;;;3968:30;3981:16;3968:8;:12;;:30;;;;:::i;:::-;3936:7;:19;3944:10;3936:19;;;;;;;;;;;;;;;:29;3956:8;3936:29;;;;;;;;;;;;;;;:62;;;;3838:168;4033:8;4012:61;;4021:10;4012:61;;;4043:7;:19;4051:10;4043:19;;;;;;;;;;;;;;;:29;4063:8;4043:29;;;;;;;;;;;;;;;;4012:61;;;;;;;;;;;;;;;;;;4087:4;4080:11;;3690:407;;;;;:::o;1235:109:145:-;1291:15;1322:8;:16;1331:6;1322:16;;;;;;;;;;;;;;;;1315:23;;1235:109;;;:::o;789:319:67:-;881:8;;;;;;;;;;;859:31;;:10;:31;;;;855:42;;;892:5;;;855:42;991:12;;:17;;;;1009:6;991:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;991:25:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;991:25:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;991:25:67;;;;;;;;;;;;;;;;976:12;:40;;;;1041:8;:15;1050:5;1041:15;;;;;;;;;;;;;;;;:20;;;;1062:6;1041:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1041:28:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1041:28:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1041:28:67;;;;;;;;;;;;;;;;1023:8;:15;1032:5;1023:15;;;;;;;;;;;;;;;:46;;;;1088:5;1076:26;;1085:1;1076:26;1095:6;1076:26;;;;;;;;;;;;;;;;;;789:319;;:::o;247:20:139:-;;;;;;;;;;;;;:::o;638:388:145:-;701:4;737:1;722:17;;:3;:17;;;;714:26;;;;;;;;765:8;:20;774:10;765:20;;;;;;;;;;;;;;;;755:6;:30;;747:39;;;;;;;;882:32;907:6;882:8;:20;891:10;882:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;859:8;:20;868:10;859:20;;;;;;;;;;;;;;;:55;;;;937:25;955:6;937:8;:13;946:3;937:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;921:8;:13;930:3;921:13;;;;;;;;;;;;;;;:41;;;;990:3;969:33;;978:10;969:33;;;995:6;969:33;;;;;;;;;;;;;;;;;;1016:4;1009:11;;638:388;;;;:::o;372:32:67:-;;;;;;;;;;;;;:::o;998:109:41:-;1060:4;1080:5;:15;;;1096:4;1080:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1080:21:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1080:21:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1080:21:41;;;;;;;;;;;;;;;;1073:28;;998:109;;;:::o;2955:261:154:-;3033:4;3078:46;3112:11;3078:7;:19;3086:10;3078:19;;;;;;;;;;;;;;;:29;3098:8;3078:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3046:7;:19;3054:10;3046:19;;;;;;;;;;;;;;;:29;3066:8;3046:29;;;;;;;;;;;;;;;:78;;;;3152:8;3131:61;;3140:10;3131:61;;;3162:7;:19;3170:10;3162:19;;;;;;;;;;;;;;;:29;3182:8;3162:29;;;;;;;;;;;;;;;;3131:61;;;;;;;;;;;;;;;;;;3206:4;3199:11;;2955:261;;;;:::o;2358:128::-;2432:7;2455;:15;2463:6;2455:15;;;;;;;;;;;;;;;:25;2471:8;2455:25;;;;;;;;;;;;;;;;2448:32;;2358:128;;;;:::o;646:80:45:-;690:10;716:4;709:11;;646:80;:::o;867:173:139:-;680:5;;;;;;;;;;;666:19;;:10;:19;;;658:28;;;;;;;;964:1;944:22;;:8;:22;;;;936:31;;;;;;;;1002:8;974:37;;995:5;;;;;;;;;;;974:37;;;;;;;;;;;;1026:8;1018:5;;:16;;;;;;;;;;;;;;;;;;867:173;:::o;869:113:95:-;927:7;955:1;950;:6;;943:14;;;;;;975:1;971;:5;964:12;;869:113;;;;:::o;1049:133::-;1107:7;1123:9;1139:1;1135;:5;1123:17;;1159:1;1154;:6;;1147:14;;;;;;1175:1;1168:8;;1049:133;;;;;:::o",
  "source": "pragma solidity ^0.4.8;\r\n\r\nimport \"../SafeMathLib.sol\";\r\nimport \"../UpgradeableToken.sol\";\r\nimport \"../MintableToken.sol\";\r\n\r\n/**\r\n * A sample token that is used as a migration testing target.\r\n *\r\n * This is not an actual token, but just a stub used in testing.\r\n */\r\ncontract TestMigrationTarget is StandardTokenExt, UpgradeAgent {\r\n\r\n  using SafeMathLib for uint;\r\n\r\n  UpgradeableToken public oldToken;\r\n\r\n  uint public originalSupply;\r\n\r\n  function TestMigrationTarget(UpgradeableToken _oldToken) {\r\n\r\n    oldToken = _oldToken;\r\n\r\n    // Let's not set bad old token\r\n    if(address(oldToken) == 0) {\r\n      throw;\r\n    }\r\n\r\n    // Let's make sure we have something to migrate\r\n    originalSupply = _oldToken.totalSupply();\r\n    if(originalSupply == 0) {\r\n      throw;\r\n    }\r\n  }\r\n\r\n  function upgradeFrom(address _from, uint256 _value) public {\r\n    if (msg.sender != address(oldToken)) throw; // only upgrade from oldToken\r\n\r\n    // Mint new tokens to the migrator\r\n    totalSupply_ = totalSupply_.plus(_value);\r\n    balances[_from] = balances[_from].plus(_value);\r\n    Transfer(0, _from, _value);\r\n  }\r\n\r\n  function() public payable {\r\n    throw;\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "D:\\trees\\tokenmint\\contracts\\tokenmarketnet-contracts\\contracts\\test\\TestMigrationTarget.sol",
  "ast": {
    "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/test/TestMigrationTarget.sol",
    "exportedSymbols": {
      "TestMigrationTarget": [
        10467
      ]
    },
    "id": 10468,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10377,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/SafeMathLib.sol",
        "file": "../SafeMathLib.sol",
        "id": 10378,
        "nodeType": "ImportDirective",
        "scope": 10468,
        "sourceUnit": 7410,
        "src": "27:28:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/UpgradeableToken.sol",
        "file": "../UpgradeableToken.sol",
        "id": 10379,
        "nodeType": "ImportDirective",
        "scope": 10468,
        "sourceUnit": 8615,
        "src": "57:33:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/MintableToken.sol",
        "file": "../MintableToken.sol",
        "id": 10380,
        "nodeType": "ImportDirective",
        "scope": 10468,
        "sourceUnit": 5693,
        "src": "92:30:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10381,
              "name": "StandardTokenExt",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7426,
              "src": "301:16:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardTokenExt_$7426",
                "typeString": "contract StandardTokenExt"
              }
            },
            "id": 10382,
            "nodeType": "InheritanceSpecifier",
            "src": "301:16:67"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10383,
              "name": "UpgradeAgent",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8386,
              "src": "319:12:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeAgent_$8386",
                "typeString": "contract UpgradeAgent"
              }
            },
            "id": 10384,
            "nodeType": "InheritanceSpecifier",
            "src": "319:12:67"
          }
        ],
        "contractDependencies": [
          7025,
          7426,
          8386,
          14561,
          15328,
          15521,
          15553,
          16058
        ],
        "contractKind": "contract",
        "documentation": "A sample token that is used as a migration testing target.\r\n\n * This is not an actual token, but just a stub used in testing.\r",
        "fullyImplemented": true,
        "id": 10467,
        "linearizedBaseContracts": [
          10467,
          8386,
          7426,
          7025,
          14561,
          16058,
          15328,
          15521,
          15553
        ],
        "name": "TestMigrationTarget",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10387,
            "libraryName": {
              "contractScope": null,
              "id": 10385,
              "name": "SafeMathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7409,
              "src": "345:11:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathLib_$7409",
                "typeString": "library SafeMathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "339:27:67",
            "typeName": {
              "id": 10386,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "361:4:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 10389,
            "name": "oldToken",
            "nodeType": "VariableDeclaration",
            "scope": 10467,
            "src": "372:32:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
              "typeString": "contract UpgradeableToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 10388,
              "name": "UpgradeableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8614,
              "src": "372:16:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                "typeString": "contract UpgradeableToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10391,
            "name": "originalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 10467,
            "src": "411:26:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10390,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "411:4:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10420,
              "nodeType": "Block",
              "src": "501:282:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10396,
                      "name": "oldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10389,
                      "src": "510:8:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                        "typeString": "contract UpgradeableToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10397,
                      "name": "_oldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10393,
                      "src": "521:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                        "typeString": "contract UpgradeableToken"
                      }
                    },
                    "src": "510:20:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                      "typeString": "contract UpgradeableToken"
                    }
                  },
                  "id": 10399,
                  "nodeType": "ExpressionStatement",
                  "src": "510:20:67"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10401,
                          "name": "oldToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10389,
                          "src": "586:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        ],
                        "id": 10400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "578:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 10402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "578:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "599:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "578:22:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10407,
                  "nodeType": "IfStatement",
                  "src": "575:49:67",
                  "trueBody": {
                    "id": 10406,
                    "nodeType": "Block",
                    "src": "602:22:67",
                    "statements": [
                      {
                        "id": 10405,
                        "nodeType": "Throw",
                        "src": "611:5:67"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10408,
                      "name": "originalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10391,
                      "src": "685:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 10409,
                          "name": "_oldToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10393,
                          "src": "702:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        },
                        "id": 10410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15255,
                        "src": "702:21:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 10411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "702:23:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "685:40:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10413,
                  "nodeType": "ExpressionStatement",
                  "src": "685:40:67"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10414,
                      "name": "originalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10391,
                      "src": "735:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "753:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "735:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10419,
                  "nodeType": "IfStatement",
                  "src": "732:46:67",
                  "trueBody": {
                    "id": 10418,
                    "nodeType": "Block",
                    "src": "756:22:67",
                    "statements": [
                      {
                        "id": 10417,
                        "nodeType": "Throw",
                        "src": "765:5:67"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 10421,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "TestMigrationTarget",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10393,
                  "name": "_oldToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10421,
                  "src": "473:26:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                    "typeString": "contract UpgradeableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10392,
                    "name": "UpgradeableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8614,
                    "src": "473:16:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                      "typeString": "contract UpgradeableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "472:28:67"
            },
            "payable": false,
            "returnParameters": {
              "id": 10395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:0:67"
            },
            "scope": 10467,
            "src": "444:339:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10460,
              "nodeType": "Block",
              "src": "848:260:67",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10428,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17885,
                        "src": "859:3:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "859:10:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10431,
                          "name": "oldToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10389,
                          "src": "881:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        ],
                        "id": 10430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "873:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 10432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "859:31:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10435,
                  "nodeType": "IfStatement",
                  "src": "855:42:67",
                  "trueBody": {
                    "id": 10434,
                    "nodeType": "Throw",
                    "src": "892:5:67"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10436,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15247,
                      "src": "976:12:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10439,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10425,
                          "src": "1009:6:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 10437,
                          "name": "totalSupply_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15247,
                          "src": "991:12:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "plus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7408,
                        "src": "991:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) returns (uint256)"
                        }
                      },
                      "id": 10440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "991:25:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "976:40:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10442,
                  "nodeType": "ExpressionStatement",
                  "src": "976:40:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10443,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15245,
                        "src": "1023:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10445,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 10444,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10423,
                        "src": "1032:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1023:15:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10450,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10425,
                          "src": "1062:6:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 10446,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15245,
                            "src": "1041:8:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 10448,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 10447,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10423,
                            "src": "1050:5:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1041:15:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "plus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7408,
                        "src": "1041:20:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) returns (uint256)"
                        }
                      },
                      "id": 10451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1041:28:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1023:46:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10453,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:46:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 10455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1085:1:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 10456,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10423,
                        "src": "1088:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10457,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10425,
                        "src": "1095:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10454,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15552,
                      "src": "1076:8:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:26:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10459,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:26:67"
                }
              ]
            },
            "documentation": null,
            "id": 10461,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upgradeFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10423,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "810:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10425,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "825:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "809:31:67"
            },
            "payable": false,
            "returnParameters": {
              "id": 10427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:67"
            },
            "scope": 10467,
            "src": "789:319:67",
            "stateMutability": "nonpayable",
            "superFunction": 8385,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10465,
              "nodeType": "Block",
              "src": "1140:18:67",
              "statements": [
                {
                  "id": 10464,
                  "nodeType": "Throw",
                  "src": "1147:5:67"
                }
              ]
            },
            "documentation": null,
            "id": 10466,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:2:67"
            },
            "payable": true,
            "returnParameters": {
              "id": 10463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1140:0:67"
            },
            "scope": 10467,
            "src": "1114:44:67",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10468,
        "src": "269:894:67"
      }
    ],
    "src": "0:1165:67"
  },
  "legacyAST": {
    "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/test/TestMigrationTarget.sol",
    "exportedSymbols": {
      "TestMigrationTarget": [
        10467
      ]
    },
    "id": 10468,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10377,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/SafeMathLib.sol",
        "file": "../SafeMathLib.sol",
        "id": 10378,
        "nodeType": "ImportDirective",
        "scope": 10468,
        "sourceUnit": 7410,
        "src": "27:28:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/UpgradeableToken.sol",
        "file": "../UpgradeableToken.sol",
        "id": 10379,
        "nodeType": "ImportDirective",
        "scope": 10468,
        "sourceUnit": 8615,
        "src": "57:33:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/MintableToken.sol",
        "file": "../MintableToken.sol",
        "id": 10380,
        "nodeType": "ImportDirective",
        "scope": 10468,
        "sourceUnit": 5693,
        "src": "92:30:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10381,
              "name": "StandardTokenExt",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7426,
              "src": "301:16:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardTokenExt_$7426",
                "typeString": "contract StandardTokenExt"
              }
            },
            "id": 10382,
            "nodeType": "InheritanceSpecifier",
            "src": "301:16:67"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10383,
              "name": "UpgradeAgent",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8386,
              "src": "319:12:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeAgent_$8386",
                "typeString": "contract UpgradeAgent"
              }
            },
            "id": 10384,
            "nodeType": "InheritanceSpecifier",
            "src": "319:12:67"
          }
        ],
        "contractDependencies": [
          7025,
          7426,
          8386,
          14561,
          15328,
          15521,
          15553,
          16058
        ],
        "contractKind": "contract",
        "documentation": "A sample token that is used as a migration testing target.\r\n\n * This is not an actual token, but just a stub used in testing.\r",
        "fullyImplemented": true,
        "id": 10467,
        "linearizedBaseContracts": [
          10467,
          8386,
          7426,
          7025,
          14561,
          16058,
          15328,
          15521,
          15553
        ],
        "name": "TestMigrationTarget",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10387,
            "libraryName": {
              "contractScope": null,
              "id": 10385,
              "name": "SafeMathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7409,
              "src": "345:11:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathLib_$7409",
                "typeString": "library SafeMathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "339:27:67",
            "typeName": {
              "id": 10386,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "361:4:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 10389,
            "name": "oldToken",
            "nodeType": "VariableDeclaration",
            "scope": 10467,
            "src": "372:32:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
              "typeString": "contract UpgradeableToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 10388,
              "name": "UpgradeableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8614,
              "src": "372:16:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                "typeString": "contract UpgradeableToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10391,
            "name": "originalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 10467,
            "src": "411:26:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10390,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "411:4:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10420,
              "nodeType": "Block",
              "src": "501:282:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10396,
                      "name": "oldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10389,
                      "src": "510:8:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                        "typeString": "contract UpgradeableToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10397,
                      "name": "_oldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10393,
                      "src": "521:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                        "typeString": "contract UpgradeableToken"
                      }
                    },
                    "src": "510:20:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                      "typeString": "contract UpgradeableToken"
                    }
                  },
                  "id": 10399,
                  "nodeType": "ExpressionStatement",
                  "src": "510:20:67"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10401,
                          "name": "oldToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10389,
                          "src": "586:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        ],
                        "id": 10400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "578:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 10402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "578:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "599:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "578:22:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10407,
                  "nodeType": "IfStatement",
                  "src": "575:49:67",
                  "trueBody": {
                    "id": 10406,
                    "nodeType": "Block",
                    "src": "602:22:67",
                    "statements": [
                      {
                        "id": 10405,
                        "nodeType": "Throw",
                        "src": "611:5:67"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10408,
                      "name": "originalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10391,
                      "src": "685:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 10409,
                          "name": "_oldToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10393,
                          "src": "702:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        },
                        "id": 10410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15255,
                        "src": "702:21:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 10411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "702:23:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "685:40:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10413,
                  "nodeType": "ExpressionStatement",
                  "src": "685:40:67"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10414,
                      "name": "originalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10391,
                      "src": "735:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "753:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "735:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10419,
                  "nodeType": "IfStatement",
                  "src": "732:46:67",
                  "trueBody": {
                    "id": 10418,
                    "nodeType": "Block",
                    "src": "756:22:67",
                    "statements": [
                      {
                        "id": 10417,
                        "nodeType": "Throw",
                        "src": "765:5:67"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 10421,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "TestMigrationTarget",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10393,
                  "name": "_oldToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10421,
                  "src": "473:26:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                    "typeString": "contract UpgradeableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10392,
                    "name": "UpgradeableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8614,
                    "src": "473:16:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                      "typeString": "contract UpgradeableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "472:28:67"
            },
            "payable": false,
            "returnParameters": {
              "id": 10395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:0:67"
            },
            "scope": 10467,
            "src": "444:339:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10460,
              "nodeType": "Block",
              "src": "848:260:67",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10428,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17885,
                        "src": "859:3:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "859:10:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10431,
                          "name": "oldToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10389,
                          "src": "881:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableToken_$8614",
                            "typeString": "contract UpgradeableToken"
                          }
                        ],
                        "id": 10430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "873:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 10432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "859:31:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10435,
                  "nodeType": "IfStatement",
                  "src": "855:42:67",
                  "trueBody": {
                    "id": 10434,
                    "nodeType": "Throw",
                    "src": "892:5:67"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10436,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15247,
                      "src": "976:12:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10439,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10425,
                          "src": "1009:6:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 10437,
                          "name": "totalSupply_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15247,
                          "src": "991:12:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "plus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7408,
                        "src": "991:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) returns (uint256)"
                        }
                      },
                      "id": 10440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "991:25:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "976:40:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10442,
                  "nodeType": "ExpressionStatement",
                  "src": "976:40:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10443,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15245,
                        "src": "1023:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10445,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 10444,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10423,
                        "src": "1032:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1023:15:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10450,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10425,
                          "src": "1062:6:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 10446,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15245,
                            "src": "1041:8:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 10448,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 10447,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10423,
                            "src": "1050:5:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1041:15:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "plus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7408,
                        "src": "1041:20:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) returns (uint256)"
                        }
                      },
                      "id": 10451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1041:28:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1023:46:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10453,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:46:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 10455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1085:1:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 10456,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10423,
                        "src": "1088:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10457,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10425,
                        "src": "1095:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10454,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15552,
                      "src": "1076:8:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:26:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10459,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:26:67"
                }
              ]
            },
            "documentation": null,
            "id": 10461,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upgradeFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10423,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "810:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10425,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "825:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "809:31:67"
            },
            "payable": false,
            "returnParameters": {
              "id": 10427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:67"
            },
            "scope": 10467,
            "src": "789:319:67",
            "stateMutability": "nonpayable",
            "superFunction": 8385,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10465,
              "nodeType": "Block",
              "src": "1140:18:67",
              "statements": [
                {
                  "id": 10464,
                  "nodeType": "Throw",
                  "src": "1147:5:67"
                }
              ]
            },
            "documentation": null,
            "id": 10466,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:2:67"
            },
            "payable": true,
            "returnParameters": {
              "id": 10463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1140:0:67"
            },
            "scope": 10467,
            "src": "1114:44:67",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10468,
        "src": "269:894:67"
      }
    ],
    "src": "0:1165:67"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-10T14:03:30.296Z"
}