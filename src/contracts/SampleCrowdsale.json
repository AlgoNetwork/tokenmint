{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146101075780632c4e722e14610136578063355274ea14610161578063401938831461018c5780634042b66f146101b75780634b6753bc146101e25780634bb278f31461020d5780634f93594514610224578063521eb273146102535780637d3d6522146102aa5780638d4e4083146102d95780638da5cb5b14610308578063b5545a3c1461035f578063b7a8807c14610376578063ec8ac4d8146103a1578063f2fde38b146103d7578063fbfa77cf1461041a578063fc0c546a14610471575b610105336104c8565b005b34801561011357600080fd5b5061011c610596565b604051808215151515815260200191505060405180910390f35b34801561014257600080fd5b5061014b6105a2565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b506101766105a8565b6040518082815260200191505060405180910390f35b34801561019857600080fd5b506101a16105ae565b6040518082815260200191505060405180910390f35b3480156101c357600080fd5b506101cc6105b4565b6040518082815260200191505060405180910390f35b3480156101ee57600080fd5b506101f76105ba565b6040518082815260200191505060405180910390f35b34801561021957600080fd5b506102226105c0565b005b34801561023057600080fd5b5061023961069c565b604051808215151515815260200191505060405180910390f35b34801561025f57600080fd5b506102686106ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b657600080fd5b506102bf6106d1565b604051808215151515815260200191505060405180910390f35b3480156102e557600080fd5b506102ee6106e0565b604051808215151515815260200191505060405180910390f35b34801561031457600080fd5b5061031d6106f3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036b57600080fd5b50610374610719565b005b34801561038257600080fd5b5061038b61081f565b6040518082815260200191505060405180910390f35b6103d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104c8565b005b3480156103e357600080fd5b50610418600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610825565b005b34801561042657600080fd5b5061042f61097d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047d57600080fd5b506104866109a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506104d883836109c8565b6104e1826109f5565b90506104f882600354610a1390919063ffffffff16565b6003819055506105088382610a31565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a361057f8383610a3f565b610587610a43565b6105918383610b1b565b505050565b60006006544211905090565b60025481565b60045481565b60085481565b60035481565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061c57600080fd5b600760149054906101000a900460ff1615151561063857600080fd5b610640610596565b151561064b57600080fd5b610653610b1f565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006008546003541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561073457600080fd5b61073c6106d1565b15151561074857600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b50505050565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561088157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156108bd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055442101580156109dc57506006544211155b15156109e757600080fd5b6109f18282610c78565b5050565b6000610a0c60025483610cab90919063ffffffff16565b9050919050565b6000808284019050838110151515610a2757fe5b8091505092915050565b610a3b8282610ce6565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610b0057600080fd5b505af1158015610b14573d6000803e3d6000fd5b5050505050565b5050565b610b276106d1565b15610bcf57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b50505050610c6e565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b505050505b610c76610df4565b565b610c828282610df6565b600454610c9a82600354610a1390919063ffffffff16565b11151515610ca757600080fd5b5050565b6000806000841415610cc05760009150610cdf565b8284029050828482811515610cd157fe5b04141515610cdb57fe5b8091505b5092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610daa57600080fd5b505af1158015610dbe573d6000803e3d6000fd5b505050506040513d6020811015610dd457600080fd5b81019080805190602001909291905050501515610df057600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e3257600080fd5b60008114151515610e4257600080fd5b50505600a165627a7a72305820bcbea32c4a809df04c7b6c81a9f16b554d9ff314e10b915b464f73213fa48b000029",
  "sourceMap": "1218:578:87:-;;;397:5:76;371:31;;;;;;;;;;;;;;;;;;;;1307:486:87;8:9:-1;5:2;;;30:1;27;20:12;5:2;1307:486:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:5;1552:12;1566;1526:4;1481:5;1488:7;1497:6;1759:1:75;1751:5;:9;1743:18;;;;;;;;1795:1;1776:21;;:7;:21;;;;1768:30;;;;;;;;1831:1;1813:20;;:6;:20;;;;1805:29;;;;;;;;1850:5;1843:4;:12;;;;1871:7;1862:6;;:16;;;;;;;;;;;;;;;;;;1893:6;1885:5;;:14;;;;;;;;;;;;;;;;;;1664:241;;;505:1:83;498:4;:8;490:17;;;;;;;;520:4;514:3;:10;;;;437:93;789:3:85;773:12;:19;;765:28;;;;;;;;824:12;808;:28;;800:37;;;;;;;;860:12;846:11;:26;;;;893:12;879:11;:26;;;;683:228;;529:10:139;521:5;;:18;;;;;;;;;;;;;;;;;;799:1:78;791:5;:9;783:18;;;;;;;;832:6;;;;;;;;;;;816:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;816:23:78;808:5;;:31;;;;;;;;;;;;;;;;;;853:5;846:4;:12;;;;725:139;1782:4:87;1773:5;:13;;1765:22;;;;;;;;1307:486;;;;;;;1218:578;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1218:578:87:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:21:75;2155:10;2145:9;:21::i;:::-;1218:578:87;1071:85:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1071:85:85;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:19:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1034:19:75;;;;;;;;;;;;;;;;;;;;;;;265:18:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;265:18:83;;;;;;;;;;;;;;;;;;;;;;;511:19:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;511:19:78;;;;;;;;;;;;;;;;;;;;;;;1087:24:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1087:24:75;;;;;;;;;;;;;;;;;;;;;;;306:26:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;306:26:85;;;;;;;;;;;;;;;;;;;;;;;581:166:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:166:76;;;;;;645:85:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;645:85:83;;;;;;;;;;;;;;;;;;;;;;;;;;;958:21:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;958:21:75;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:87:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1203:87:78;;;;;;;;;;;;;;;;;;;;;;;;;;;371:31:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:31:76;;;;;;;;;;;;;;;;;;;;;;;;;;;247:20:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:20:139;;;;;;;;;;;;;;;;;;;;;;;;;;;957:126:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;957:126:78;;;;;;275:26:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;275:26:85;;;;;;;;;;;;;;;;;;;;;;;2314:560:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:173:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;867:173:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:24:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:24:78;;;;;;;;;;;;;;;;;;;;;;;;;;;893:18:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;893:18:75;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:560;2379:17;2514:14;2399:9;2379:29;;2415:45;2436:12;2450:9;2415:20;:45::i;:::-;2531:26;2547:9;2531:15;:26::i;:::-;2514:43;;2599:24;2613:9;2599;;:13;;:24;;;;:::i;:::-;2587:9;:36;;;;2632:38;2649:12;2663:6;2632:16;:38::i;:::-;2703:12;2677:58;;2691:10;2677:58;;;2717:9;2728:6;2677:58;;;;;;;;;;;;;;;;;;;;;;;;2744:47;2767:12;2781:9;2744:22;:47::i;:::-;2800:15;:13;:15::i;:::-;2822:46;2844:12;2858:9;2822:21;:46::i;:::-;2314:560;;;:::o;1071:85:85:-;1113:4;1139:11;;1133:3;:17;1126:24;;1071:85;:::o;1034:19:75:-;;;;:::o;265:18:83:-;;;;:::o;511:19:78:-;;;;:::o;1087:24:75:-;;;;:::o;306:26:85:-;;;;:::o;581:166:76:-;680:5:139;;;;;;;;;;;666:19;;:10;:19;;;658:28;;;;;;;;634:11:76;;;;;;;;;;;633:12;625:21;;;;;;;;661:11;:9;:11::i;:::-;653:20;;;;;;;;682:14;:12;:14::i;:::-;703:11;;;;;;;;;;737:4;723:11;;:18;;;;;;;;;;;;;;;;;;581:166::o;645:85:83:-;688:4;721:3;;708:9;;:16;;701:23;;645:85;:::o;958:21:75:-;;;;;;;;;;;;;:::o;1203:87:78:-;1247:4;1280;;1267:9;;:17;;1260:24;;1203:87;:::o;371:31:76:-;;;;;;;;;;;;;:::o;247:20:139:-;;;;;;;;;;;;;:::o;957:126:78:-;1002:11;;;;;;;;;;;994:20;;;;;;;;1030:13;:11;:13::i;:::-;1029:14;1021:23;;;;;;;;1053:5;;;;;;;;;;;:12;;;1066:10;1053:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1053:24:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1053:24:78;;;;957:126::o;275:26:85:-;;;;:::o;867:173:139:-;680:5;;;;;;;;;;;666:19;;:10;:19;;;658:28;;;;;;;;964:1;944:22;;:8;:22;;;;936:31;;;;;;;;1002:8;974:37;;995:5;;;;;;;;;;;974:37;;;;;;;;;;;;1026:8;1018:5;;:16;;;;;;;;;;;;;;;;;;867:173;:::o;602:24:78:-;;;;;;;;;;;;;:::o;893:18:75:-;;;;;;;;;;;;;:::o;1347:160:85:-;450:11;;443:3;:18;;:40;;;;;472:11;;465:3;:18;;443:40;435:49;;;;;;;;1449:52;1476:12;1490:10;1449:26;:52::i;:::-;1347:160;;:::o;5278:117:75:-;5346:7;5369:20;5384:4;;5369:10;:14;;:20;;;;:::i;:::-;5362:27;;5278:117;;;:::o;1049:133:95:-;1107:7;1123:9;1139:1;1135;:5;1123:17;;1159:1;1154;:6;;1147:14;;;;;;1175:1;1168:8;;1049:133;;;;;:::o;4524:134:75:-;4610:42;4625:12;4639;4610:14;:42::i;:::-;4524:134;;:::o;4918:115::-;;;:::o;1640:89:78:-;1681:5;;;;;;;;;;;:13;;;1701:9;1712:10;1681:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1681:42:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1681:42:78;;;;;1640:89::o;3754:114:75:-;;;:::o;1381:167:78:-;1425:13;:11;:13::i;:::-;1421:93;;;1449:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1449:13:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1449:13:78;;;;1421:93;;;1485:5;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1485:21:78;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1485:21:78;;;;1421:93;1522:20;:18;:20::i;:::-;1381:167::o;923:194:83:-;1011:52;1038:12;1052:10;1011:26;:52::i;:::-;1107:3;;1078:25;1092:10;1078:9;;:13;;:25;;;;:::i;:::-;:32;;1070:41;;;;;;;;923:194;;:::o;215:180:95:-;273:7;332:9;298:1;293;:6;289:37;;;317:1;310:8;;;;289:37;348:1;344;:5;332:17;;372:1;367;363;:5;;;;;;;;:10;356:18;;;;;;388:1;381:8;;215:180;;;;;;:::o;522:152:81:-;628:5;;;;;;;;;;;614:25;;;640:12;654;614:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;614:53:81;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;614:53:81;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;614:53:81;;;;;;;;;;;;;;;;606:62;;;;;;;;522:152;;:::o;950:39:76:-;:::o;3309:160:75:-;3429:1;3405:26;;:12;:26;;;;3397:35;;;;;;;;3461:1;3447:10;:15;;3439:24;;;;;;;;3309:160;;:::o",
  "source": "pragma solidity ^0.4.18;\r\n\r\nimport \"../crowdsale/validation/CappedCrowdsale.sol\";\r\nimport \"../crowdsale/distribution/RefundableCrowdsale.sol\";\r\nimport \"../crowdsale/emission/MintedCrowdsale.sol\";\r\nimport \"../token/ERC20/MintableToken.sol\";\r\n\r\n\r\n/**\r\n * @title SampleCrowdsaleToken\r\n * @dev Very simple ERC20 Token that can be minted.\r\n * It is meant to be used in a crowdsale contract.\r\n */\r\ncontract SampleCrowdsaleToken is MintableToken {\r\n\r\n  string public constant name = \"Sample Crowdsale Token\"; // solium-disable-line uppercase\r\n  string public constant symbol = \"SCT\"; // solium-disable-line uppercase\r\n  uint8 public constant decimals = 18; // solium-disable-line uppercase\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title SampleCrowdsale\r\n * @dev This is an example of a fully fledged crowdsale.\r\n * The way to add new features to a base crowdsale is by multiple inheritance.\r\n * In this example we are providing following extensions:\r\n * CappedCrowdsale - sets a max boundary for raised funds\r\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\n *\r\n * After adding multiple features it's good practice to run integration tests\r\n * to ensure that subcontracts works together as intended.\r\n */\r\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\r\n\r\n  function SampleCrowdsale(uint256 _openingTime, uint256 _closingTime, uint256 _rate, address _wallet, uint256 _cap, MintableToken _token, uint256 _goal) public\r\n    Crowdsale(_rate, _wallet, _token)\r\n    CappedCrowdsale(_cap)\r\n    TimedCrowdsale(_openingTime, _closingTime)\r\n    RefundableCrowdsale(_goal)\r\n  {\r\n    //As goal needs to be met for a successful crowdsale\r\n    //the value needs to less or equal than a cap which is limit for accepted funds\r\n    require(_goal <= _cap);\r\n  }\r\n}\r\n",
  "sourcePath": "D:\\trees\\tokenmint\\contracts\\tokenmarketnet-contracts\\contracts\\zeppelin\\contracts\\examples\\SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        12136
      ],
      "SampleCrowdsaleToken": [
        12090
      ]
    },
    "id": 12137,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12074,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:87"
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 12075,
        "nodeType": "ImportDirective",
        "scope": 12137,
        "sourceUnit": 11742,
        "src": "28:53:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 12076,
        "nodeType": "ImportDirective",
        "scope": 12137,
        "sourceUnit": 11331,
        "src": "83:59:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 12077,
        "nodeType": "ImportDirective",
        "scope": 12137,
        "sourceUnit": 11582,
        "src": "144:51:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/token/ERC20/MintableToken.sol",
        "file": "../token/ERC20/MintableToken.sol",
        "id": 12078,
        "nodeType": "ImportDirective",
        "scope": 12137,
        "sourceUnit": 15649,
        "src": "197:42:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12079,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15648,
              "src": "425:13:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$15648",
                "typeString": "contract MintableToken"
              }
            },
            "id": 12080,
            "nodeType": "InheritanceSpecifier",
            "src": "425:13:87"
          }
        ],
        "contractDependencies": [
          14561,
          15328,
          15521,
          15553,
          15648,
          16058
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\r\n@dev Very simple ERC20 Token that can be minted.\r\nIt is meant to be used in a crowdsale contract.\r",
        "fullyImplemented": true,
        "id": 12090,
        "linearizedBaseContracts": [
          12090,
          15648,
          14561,
          16058,
          15328,
          15521,
          15553
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 12083,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 12090,
            "src": "446:54:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 12081,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "446:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 12082,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "476:24:87",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 12086,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 12090,
            "src": "538:37:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 12084,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "538:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 12085,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "570:5:87",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 12089,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 12090,
            "src": "613:35:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 12087,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "613:5:87",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 12088,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "646:2:87",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 12137,
        "src": "392:295:87"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12091,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11741,
              "src": "1246:15:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$11741",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 12092,
            "nodeType": "InheritanceSpecifier",
            "src": "1246:15:87"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12093,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11330,
              "src": "1263:19:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$11330",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 12094,
            "nodeType": "InheritanceSpecifier",
            "src": "1263:19:87"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12095,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11581,
              "src": "1284:15:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$11581",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 12096,
            "nodeType": "InheritanceSpecifier",
            "src": "1284:15:87"
          }
        ],
        "contractDependencies": [
          11104,
          11152,
          11330,
          11581,
          11741,
          11971,
          14561
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 12136,
        "linearizedBaseContracts": [
          12136,
          11581,
          11330,
          11152,
          14561,
          11971,
          11741,
          11104
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12134,
              "nodeType": "Block",
              "src": "1615:178:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12129,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12110,
                          "src": "1773:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12130,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12106,
                          "src": "1782:4:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1773:13:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17888,
                        17889
                      ],
                      "referencedDeclaration": 17888,
                      "src": "1765:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:22:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12133,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:22:87"
                }
              ]
            },
            "documentation": null,
            "id": 12135,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12113,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12102,
                    "src": "1481:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12114,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12104,
                    "src": "1488:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12115,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12108,
                    "src": "1497:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$15648",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 12116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12112,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11104,
                  "src": "1471:9:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$11104_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1471:33:87"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12118,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12106,
                    "src": "1526:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 12119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12117,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11741,
                  "src": "1510:15:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$11741_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1510:21:87"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12121,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12098,
                    "src": "1552:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12122,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12100,
                    "src": "1566:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 12123,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12120,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11971,
                  "src": "1537:14:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$11971_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1537:42:87"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12125,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12110,
                    "src": "1605:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 12126,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12124,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11330,
                  "src": "1585:19:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$11330_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1585:26:87"
              }
            ],
            "name": "SampleCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12098,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1332:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12100,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1354:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12102,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1376:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12104,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1391:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12106,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1408:12:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12108,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1422:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$15648",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12107,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15648,
                    "src": "1422:13:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$15648",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12110,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1444:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1331:127:87"
            },
            "payable": false,
            "returnParameters": {
              "id": 12127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1615:0:87"
            },
            "scope": 12136,
            "src": "1307:486:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12137,
        "src": "1218:578:87"
      }
    ],
    "src": "0:1798:87"
  },
  "legacyAST": {
    "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        12136
      ],
      "SampleCrowdsaleToken": [
        12090
      ]
    },
    "id": 12137,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12074,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:87"
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 12075,
        "nodeType": "ImportDirective",
        "scope": 12137,
        "sourceUnit": 11742,
        "src": "28:53:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 12076,
        "nodeType": "ImportDirective",
        "scope": 12137,
        "sourceUnit": 11331,
        "src": "83:59:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 12077,
        "nodeType": "ImportDirective",
        "scope": 12137,
        "sourceUnit": 11582,
        "src": "144:51:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/trees/tokenmint/contracts/tokenmarketnet-contracts/contracts/zeppelin/contracts/token/ERC20/MintableToken.sol",
        "file": "../token/ERC20/MintableToken.sol",
        "id": 12078,
        "nodeType": "ImportDirective",
        "scope": 12137,
        "sourceUnit": 15649,
        "src": "197:42:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12079,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15648,
              "src": "425:13:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$15648",
                "typeString": "contract MintableToken"
              }
            },
            "id": 12080,
            "nodeType": "InheritanceSpecifier",
            "src": "425:13:87"
          }
        ],
        "contractDependencies": [
          14561,
          15328,
          15521,
          15553,
          15648,
          16058
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\r\n@dev Very simple ERC20 Token that can be minted.\r\nIt is meant to be used in a crowdsale contract.\r",
        "fullyImplemented": true,
        "id": 12090,
        "linearizedBaseContracts": [
          12090,
          15648,
          14561,
          16058,
          15328,
          15521,
          15553
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 12083,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 12090,
            "src": "446:54:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 12081,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "446:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 12082,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "476:24:87",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 12086,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 12090,
            "src": "538:37:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 12084,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "538:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 12085,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "570:5:87",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 12089,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 12090,
            "src": "613:35:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 12087,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "613:5:87",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 12088,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "646:2:87",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 12137,
        "src": "392:295:87"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12091,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11741,
              "src": "1246:15:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$11741",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 12092,
            "nodeType": "InheritanceSpecifier",
            "src": "1246:15:87"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12093,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11330,
              "src": "1263:19:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$11330",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 12094,
            "nodeType": "InheritanceSpecifier",
            "src": "1263:19:87"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12095,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11581,
              "src": "1284:15:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$11581",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 12096,
            "nodeType": "InheritanceSpecifier",
            "src": "1284:15:87"
          }
        ],
        "contractDependencies": [
          11104,
          11152,
          11330,
          11581,
          11741,
          11971,
          14561
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 12136,
        "linearizedBaseContracts": [
          12136,
          11581,
          11330,
          11152,
          14561,
          11971,
          11741,
          11104
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12134,
              "nodeType": "Block",
              "src": "1615:178:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12129,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12110,
                          "src": "1773:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12130,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12106,
                          "src": "1782:4:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1773:13:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17888,
                        17889
                      ],
                      "referencedDeclaration": 17888,
                      "src": "1765:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:22:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12133,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:22:87"
                }
              ]
            },
            "documentation": null,
            "id": 12135,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12113,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12102,
                    "src": "1481:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12114,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12104,
                    "src": "1488:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12115,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12108,
                    "src": "1497:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$15648",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 12116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12112,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11104,
                  "src": "1471:9:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$11104_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1471:33:87"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12118,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12106,
                    "src": "1526:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 12119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12117,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11741,
                  "src": "1510:15:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$11741_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1510:21:87"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12121,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12098,
                    "src": "1552:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12122,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12100,
                    "src": "1566:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 12123,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12120,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11971,
                  "src": "1537:14:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$11971_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1537:42:87"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12125,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12110,
                    "src": "1605:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 12126,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12124,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11330,
                  "src": "1585:19:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$11330_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1585:26:87"
              }
            ],
            "name": "SampleCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12098,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1332:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12100,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1354:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12102,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1376:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12104,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1391:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12106,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1408:12:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12108,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1422:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$15648",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12107,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15648,
                    "src": "1422:13:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$15648",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12110,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 12135,
                  "src": "1444:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1331:127:87"
            },
            "payable": false,
            "returnParameters": {
              "id": 12127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1615:0:87"
            },
            "scope": 12136,
            "src": "1307:486:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12137,
        "src": "1218:578:87"
      }
    ],
    "src": "0:1798:87"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-10T14:03:30.312Z"
}