{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405160e080611cf18339810180604052810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505080878785888887600160008190555060008311151561008d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156100c957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561010557600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506000811115156101a057600080fd5b80600581905550504282101515156101b757600080fd5b81811115156101c557600080fd5b816006819055508060078190555050506000600860006101000a81548160ff0219169083151502179055506000811115156101ff57600080fd5b6102166102d4640100000000026401000000009004565b61021e6102fe565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610270573d6000803e3d6000fd5b50600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600981905550508281111515156102c857600080fd5b5050505050505061030e565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b604051610d2080610fd183390190565b610cb48061031d6000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146100f15780632c4e722e14610120578063355274ea1461014b57806340193883146101765780634042b66f146101a157806347535d7b146101cc5780634b6753bc146101fb5780634bb278f3146102265780634f9359451461023d578063521eb2731461026c5780637d3d6522146102c3578063b3f05b97146102f2578063b7a8807c14610321578063bffa55d51461034c578063ec8ac4d81461038f578063fc0c546a146103c5575b6100ef3361041c565b005b3480156100fd57600080fd5b50610106610512565b604051808215151515815260200191505060405180910390f35b34801561012c57600080fd5b5061013561051e565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b50610160610528565b6040518082815260200191505060405180910390f35b34801561018257600080fd5b5061018b610532565b6040518082815260200191505060405180910390f35b3480156101ad57600080fd5b506101b661053c565b6040518082815260200191505060405180910390f35b3480156101d857600080fd5b506101e1610546565b604051808215151515815260200191505060405180910390f35b34801561020757600080fd5b50610210610561565b6040518082815260200191505060405180910390f35b34801561023257600080fd5b5061023b61056b565b005b34801561024957600080fd5b506102526105eb565b604051808215151515815260200191505060405180910390f35b34801561027857600080fd5b506102816105ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102cf57600080fd5b506102d8610629565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b5061030761063d565b604051808215151515815260200191505060405180910390f35b34801561032d57600080fd5b50610336610654565b6040518082815260200191505060405180910390f35b34801561035857600080fd5b5061038d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061065e565b005b6103c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061041c565b005b3480156103d157600080fd5b506103da61075d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060006001600080828254019250508190555060005490503492506104438484610787565b61044c836107a8565b9150610463836004546107c690919063ffffffff16565b60048190555061047384836107e7565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a36104ea84846107f5565b6104f26107f9565b6104fc84846108d1565b6000548114151561050c57600080fd5b50505050565b60006007544211905090565b6000600354905090565b6000600554905090565b6000600954905090565b6000600454905090565b6000600654421015801561055c57506007544211155b905090565b6000600754905090565b600860009054906101000a900460ff1615151561058757600080fd5b61058f610512565b151561059a57600080fd5b6001600860006101000a81548160ff0219169083151502179055506105bd6108d5565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b60006005546105f861053c565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060095461063661053c565b1015905090565b6000600860009054906101000a900460ff16905090565b6000600654905090565b61066661063d565b151561067157600080fd5b610679610629565b15151561068557600080fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561074257600080fd5b505af1158015610756573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61078f610546565b151561079a57600080fd5b6107a48282610acc565b5050565b60006107bf60035483610b0490919063ffffffff16565b9050919050565b60008082840190508381101515156107dd57600080fd5b8091505092915050565b6107f18282610b42565b5050565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b1580156108b657600080fd5b505af11580156108ca573d6000803e3d6000fd5b5050505050565b5050565b6108dd610629565b15610a2357600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610a0657600080fd5b505af1158015610a1a573d6000803e3d6000fd5b50505050610ac2565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610aa957600080fd5b505af1158015610abd573d6000803e3d6000fd5b505050505b610aca610c36565b565b610ad68282610c38565b600554610af382610ae561053c565b6107c690919063ffffffff16565b11151515610b0057600080fd5b5050565b6000806000841415610b195760009150610b3b565b8284029050828482811515610b2a57fe5b04141515610b3757600080fd5b8091505b5092915050565b610b4a61075d565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b505050506040513d6020811015610c1657600080fd5b81019080805190602001909291905050501515610c3257600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610c7457600080fd5b60008114151515610c8457600080fd5b50505600a165627a7a72305820652ba8a418b834f628d96bf0c1c5019780f816d67593fa8b0a21dd921fcdb3780029608060405234801561001057600080fd5b50604051602080610d2083398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561013357600080fd5b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548160ff0219169083600281111561019357fe5b021790555050610b78806101a86000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c146100b457806338af3eed146100f757806343d726d61461014e57806351cff8d914610165578063685ca194146101a85780638c52dc41146102035780639af6549a1461021a578063c19d93fb14610231578063c6dbdf611461026a578063e3a9db1a146102c1578063f340fa0114610318575b600080fd5b3480156100c057600080fd5b506100f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061034e565b005b34801561010357600080fd5b5061010c6104ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015a57600080fd5b506101636104d6565b005b34801561017157600080fd5b506101a6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105b6565b005b3480156101b457600080fd5b506101e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105d6565b604051808215151515815260200191505060405180910390f35b34801561020f57600080fd5b50610218610608565b005b34801561022657600080fd5b5061022f6106e9565b005b34801561023d57600080fd5b5061024661079e565b6040518082600281111561025657fe5b60ff16815260200191505060405180910390f35b34801561027657600080fd5b5061027f6107b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102cd57600080fd5b50610302600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107de565b6040518082815260200191505060405180910390f35b61034c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610827565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103a957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156103e557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561053157600080fd5b6000600281111561053e57fe5b600260009054906101000a900460ff16600281111561055957fe5b14151561056557600080fd5b60028060006101000a81548160ff0219169083600281111561058357fe5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b6105bf816105d6565b15156105ca57600080fd5b6105d381610867565b50565b6000600160028111156105e557fe5b600260009054906101000a900460ff16600281111561060057fe5b149050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561066357600080fd5b6000600281111561067057fe5b600260009054906101000a900460ff16600281111561068b57fe5b14151561069757600080fd5b6001600260006101000a81548160ff021916908360028111156106b657fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6002808111156106f557fe5b600260009054906101000a900460ff16600281111561071057fe5b14151561071c57600080fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561079b573d6000803e3d6000fd5b50565b6000600260009054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600281111561083457fe5b600260009054906101000a900460ff16600281111561084f57fe5b14151561085b57600080fd5b610864816109e4565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108c457600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610991573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a4157600080fd5b349050610a9681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2b90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b6000808284019050838110151515610b4257600080fd5b80915050929150505600a165627a7a723058203aa47b41c272e1d4c454e3e0a55db132923261098af47a3b1bf3012c2dc7d9f20029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146100f15780632c4e722e14610120578063355274ea1461014b57806340193883146101765780634042b66f146101a157806347535d7b146101cc5780634b6753bc146101fb5780634bb278f3146102265780634f9359451461023d578063521eb2731461026c5780637d3d6522146102c3578063b3f05b97146102f2578063b7a8807c14610321578063bffa55d51461034c578063ec8ac4d81461038f578063fc0c546a146103c5575b6100ef3361041c565b005b3480156100fd57600080fd5b50610106610512565b604051808215151515815260200191505060405180910390f35b34801561012c57600080fd5b5061013561051e565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b50610160610528565b6040518082815260200191505060405180910390f35b34801561018257600080fd5b5061018b610532565b6040518082815260200191505060405180910390f35b3480156101ad57600080fd5b506101b661053c565b6040518082815260200191505060405180910390f35b3480156101d857600080fd5b506101e1610546565b604051808215151515815260200191505060405180910390f35b34801561020757600080fd5b50610210610561565b6040518082815260200191505060405180910390f35b34801561023257600080fd5b5061023b61056b565b005b34801561024957600080fd5b506102526105eb565b604051808215151515815260200191505060405180910390f35b34801561027857600080fd5b506102816105ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102cf57600080fd5b506102d8610629565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b5061030761063d565b604051808215151515815260200191505060405180910390f35b34801561032d57600080fd5b50610336610654565b6040518082815260200191505060405180910390f35b34801561035857600080fd5b5061038d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061065e565b005b6103c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061041c565b005b3480156103d157600080fd5b506103da61075d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060006001600080828254019250508190555060005490503492506104438484610787565b61044c836107a8565b9150610463836004546107c690919063ffffffff16565b60048190555061047384836107e7565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a36104ea84846107f5565b6104f26107f9565b6104fc84846108d1565b6000548114151561050c57600080fd5b50505050565b60006007544211905090565b6000600354905090565b6000600554905090565b6000600954905090565b6000600454905090565b6000600654421015801561055c57506007544211155b905090565b6000600754905090565b600860009054906101000a900460ff1615151561058757600080fd5b61058f610512565b151561059a57600080fd5b6001600860006101000a81548160ff0219169083151502179055506105bd6108d5565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b60006005546105f861053c565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060095461063661053c565b1015905090565b6000600860009054906101000a900460ff16905090565b6000600654905090565b61066661063d565b151561067157600080fd5b610679610629565b15151561068557600080fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561074257600080fd5b505af1158015610756573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61078f610546565b151561079a57600080fd5b6107a48282610acc565b5050565b60006107bf60035483610b0490919063ffffffff16565b9050919050565b60008082840190508381101515156107dd57600080fd5b8091505092915050565b6107f18282610b42565b5050565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b1580156108b657600080fd5b505af11580156108ca573d6000803e3d6000fd5b5050505050565b5050565b6108dd610629565b15610a2357600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610a0657600080fd5b505af1158015610a1a573d6000803e3d6000fd5b50505050610ac2565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610aa957600080fd5b505af1158015610abd573d6000803e3d6000fd5b505050505b610aca610c36565b565b610ad68282610c38565b600554610af382610ae561053c565b6107c690919063ffffffff16565b11151515610b0057600080fd5b5050565b6000806000841415610b195760009150610b3b565b8284029050828482811515610b2a57fe5b04141515610b3757600080fd5b8091505b5092915050565b610b4a61075d565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b505050506040513d6020811015610c1657600080fd5b81019080805190602001909291905050501515610c3257600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610c7457600080fd5b60008114151515610c8457600080fd5b50505600a165627a7a72305820652ba8a418b834f628d96bf0c1c5019780f816d67593fa8b0a21dd921fcdb3780029",
  "sourceMap": "1433:661:34:-;;;1522:569;8:9:-1;5:2;;;30:1;27;20:12;5:2;1522:569:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:4;1835:11;1848;1806:3;1760:4;1766:6;1774:5;592:1:129;576:13;:17;;;;2365:1:14;2358:4;:8;2350:17;;;;;;;;2403:1;2385:20;;:6;:20;;;;2377:29;;;;;;;;2441:1;2424:19;;:5;:19;;;;2416:28;;;;;;;;2463:4;2455:5;:12;;;;2487:6;2477:7;;:16;;;;;;;;;;;;;;;;;;2512:5;2503:6;;:14;;;;;;;;;;;;;;;;;;2276:248;;;508:1:22;502:3;:7;494:16;;;;;;;;528:3;521:4;:10;;;;450:89;845:15:25;830:11;:30;;822:39;;;;;;;;894:11;880;:25;872:34;;;;;;;;934:11;919:12;:26;;;;971:11;956:12;:26;;;;686:304;;473:5:15;460:10;;:18;;;;;;;;;;;;;;;;;;1244:1:17;1237:4;:8;1229:17;;;;;;;;1284:8;:6;;;:8;;;:::i;:::-;1267:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1267:26:17;1257:7;;:36;;;;;;;;;;;;;;;;;;1312:4;1304:5;:12;;;;1184:140;2079:3:34;2071:4;:11;;2063:20;;;;;;;;1522:569;;;;;;;1433:661;;3225:79:14;3264:7;3290;;;;;;;;;;;3283:14;;3225:79;:::o;1433:661:34:-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1433:661:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2986:21:14;2996:10;2986:9;:21::i;:::-;1433:661:34;1772:167:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1772:167:25;;;;;;;;;;;;;;;;;;;;;;;;;;;3389:75:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3389:75:14;;;;;;;;;;;;;;;;;;;;;;;607::22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;607:75:22;;;;;;;;;;;;;;;;;;;;;;;1411:77:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1411:77:17;;;;;;;;;;;;;;;;;;;;;;;3527:85:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3527:85:14;;;;;;;;;;;;;;;;;;;;;;;1402:200:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1402:200:25;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1221:91:25;;;;;;;;;;;;;;;;;;;;;;;829:191:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;829:191:15;;;;;;806:94:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;806:94:22;;;;;;;;;;;;;;;;;;;;;;;;;;;3225:79:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3225:79:14;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:96:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1930:96:17;;;;;;;;;;;;;;;;;;;;;;;;;;;581:84:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:84:15;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:91:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1060:91:25;;;;;;;;;;;;;;;;;;;;;;;1643:158:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1643:158:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:603:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3073:76:14;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:603;3947:17;4089:14;1049:20:129;1037:1;1020:13;;:18;;;;;;;;;;;1072:13;;1049:36;;3967:9:14;3947:29;;3986:44;4007:11;4020:9;3986:20;:44::i;:::-;4106:26;4122:9;4106:15;:26::i;:::-;4089:43;;4180:25;4195:9;4180:10;;:14;;:25;;;;:::i;:::-;4167:10;:38;;;;4216:37;4233:11;4246:6;4216:16;:37::i;:::-;4296:11;4268:59;;4284:10;4268:59;;;4309:9;4320:6;4268:59;;;;;;;;;;;;;;;;;;;;;;;;4338:46;4361:11;4374:9;4338:22;:46::i;:::-;4395:15;:13;:15::i;:::-;4420:45;4442:11;4455:9;4420:21;:45::i;:::-;1132:13:129;;1116:12;:29;1108:38;;;;;;;;3869:603:14;;;;:::o;1772:167:25:-;1814:4;1919:12;;1901:15;:30;1894:37;;1772:167;:::o;3389:75:14:-;3426:7;3452:5;;3445:12;;3389:75;:::o;607::22:-;643:7;670:4;;663:11;;607:75;:::o;1411:77:17:-;1448:7;1475:5;;1468:12;;1411:77;:::o;3527:85:14:-;3569:7;3595:10;;3588:17;;3527:85;:::o;1402:200:25:-;1441:4;1547:12;;1528:15;:31;;:66;;;;;1582:12;;1563:15;:31;;1528:66;1521:73;;1402:200;:::o;1221:91::-;1265:7;1292:12;;1285:19;;1221:91;:::o;829:191:15:-;876:10;;;;;;;;;;;875:11;867:20;;;;;;;;906:11;:9;:11::i;:::-;898:20;;;;;;;;944:4;931:10;;:17;;;;;;;;;;;;;;;;;;961:15;:13;:15::i;:::-;992:20;;;;;;;;;;829:191::o;806:94:22:-;849:4;888;;873:11;:9;:11::i;:::-;:19;;866:26;;806:94;:::o;3225:79:14:-;3264:7;3290;;;;;;;;;;;3283:14;;3225:79;:::o;1930:96:17:-;1974:4;2013:5;;1998:11;:9;:11::i;:::-;:20;;1991:27;;1930:96;:::o;581:84:15:-;623:4;647:10;;;;;;;;;;;640:17;;581:84;:::o;1060:91:25:-;1104:7;1131:12;;1124:19;;1060:91;:::o;1643:158:17:-;1708:11;:9;:11::i;:::-;1700:20;;;;;;;;1740:13;:11;:13::i;:::-;1739:14;1731:23;;;;;;;;1767:7;;;;;;;;;;;:16;;;1784:8;1767:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1767:26:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1767:26:17;;;;1643:158;:::o;3073:76:14:-;3111:6;3136;;;;;;;;;;;3129:13;;3073:76;:::o;2138:167:25:-;462:8;:6;:8::i;:::-;454:17;;;;;;;;2247:50;2274:11;2287:9;2247:26;:50::i;:::-;2138:167;;:::o;7154:120:14:-;7221:7;7247:20;7261:5;;7247:9;:13;;:20;;;;:::i;:::-;7240:27;;7154:120;;;:::o;2854:150:41:-;2912:7;2932:9;2948:1;2944;:5;2932:17;;2973:1;2968;:6;;2960:15;;;;;;;;2995:1;2988:8;;2854:150;;;;;:::o;6391:134:14:-;6478:40;6493:11;6506;6478:14;:40::i;:::-;6391:134;;:::o;6788:117::-;;;:::o;2472:97:17:-;2517:7;;;;;;;;;;;:15;;;2539:9;2550:10;2517:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2517:44:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2517:44:17;;;;;2472:97::o;5601:121:14:-;;;:::o;2124:247:17:-;2173:13;:11;:13::i;:::-;2169:161;;;2203:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2203:15:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2203:15:17;;;;2233:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2233:29:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2233:29:17;;;;2169:161;;;2295:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2295:23:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2295:23:17;;;;2169:161;2342:21;:19;:21::i;:::-;2124:247::o;1103:207:22:-;1198:50;1225:11;1238:9;1198:26;:50::i;:::-;1297:4;;1267:26;1283:9;1267:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1259:43;;;;;;;;1103:207;;:::o;284:433:41:-;342:7;641:9;591:1;586;:6;582:47;;;616:1;609:8;;;;582:47;657:1;653;:5;641:17;;686:1;681;677;:5;;;;;;;;:10;669:19;;;;;;;;708:1;701:8;;284:433;;;;;;:::o;527:239:20:-;717:7;:5;:7::i;:::-;695:36;;;732:11;745;695:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;695:62:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;695:62:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;695:62:20;;;;;;;;;;;;;;;;687:71;;;;;;;;527:239;;:::o;1236:36:15:-;:::o;5145:168:14:-;5270:1;5247:25;;:11;:25;;;;5239:34;;;;;;;;5304:1;5291:9;:14;;5283:23;;;;;;;;5145:168;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"../crowdsale/validation/CappedCrowdsale.sol\";\r\nimport \"../crowdsale/distribution/RefundableCrowdsale.sol\";\r\nimport \"../crowdsale/emission/MintedCrowdsale.sol\";\r\nimport \"../token/ERC20/ERC20Mintable.sol\";\r\nimport \"../token/ERC20/ERC20Detailed.sol\";\r\n\r\n/**\r\n * @title SampleCrowdsaleToken\r\n * @dev Very simple ERC20 Token that can be minted.\r\n * It is meant to be used in a crowdsale contract.\r\n */\r\ncontract SampleCrowdsaleToken is ERC20Mintable, ERC20Detailed {\r\n    constructor () public ERC20Detailed(\"Sample Crowdsale Token\", \"SCT\", 18) {}\r\n}\r\n\r\n/**\r\n * @title SampleCrowdsale\r\n * @dev This is an example of a fully fledged crowdsale.\r\n * The way to add new features to a base crowdsale is by multiple inheritance.\r\n * In this example we are providing following extensions:\r\n * CappedCrowdsale - sets a max boundary for raised funds\r\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\n * MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\n * when receiving purchases.\r\n *\r\n * After adding multiple features it's good practice to run integration tests\r\n * to ensure that subcontracts works together as intended.\r\n */\r\n// XXX There doesn't seem to be a way to split this line that keeps solium\r\n// happy. See:\r\n// https://github.com/duaraghav8/Solium/issues/205\r\n// --elopio - 2018-05-10\r\n// solium-disable-next-line max-len\r\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\r\n    constructor (\r\n        uint256 openingTime,\r\n        uint256 closingTime,\r\n        uint256 rate,\r\n        address wallet,\r\n        uint256 cap,\r\n        ERC20Mintable token,\r\n        uint256 goal\r\n    )\r\n        public\r\n        Crowdsale(rate, wallet, token)\r\n        CappedCrowdsale(cap)\r\n        TimedCrowdsale(openingTime, closingTime)\r\n        RefundableCrowdsale(goal)\r\n    {\r\n        //As goal needs to be met for a successful crowdsale\r\n        //the value needs to less or equal than a cap which is limit for accepted funds\r\n        require(goal <= cap);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\dev\\tokenmint\\contracts\\open-zeppelin-contracts\\examples\\SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        3664
      ],
      "SampleCrowdsaleToken": [
        3618
      ]
    },
    "id": 3665,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3599,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:34"
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 3600,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 2387,
        "src": "28:53:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3601,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 2041,
        "src": "83:59:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 3602,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 2181,
        "src": "144:51:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 3603,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 8238,
        "src": "197:42:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../token/ERC20/ERC20Detailed.sol",
        "id": 3604,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 8210,
        "src": "241:42:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3605,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8237,
              "src": "467:13:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$8237",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3606,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3607,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8209,
              "src": "482:13:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$8209",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3608,
            "nodeType": "InheritanceSpecifier",
            "src": "482:13:34"
          }
        ],
        "contractDependencies": [
          1094,
          8063,
          8209,
          8237,
          8408
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\r\n@dev Very simple ERC20 Token that can be minted.\r\nIt is meant to be used in a crowdsale contract.\r",
        "fullyImplemented": true,
        "id": 3618,
        "linearizedBaseContracts": [
          3618,
          8209,
          8237,
          1094,
          8063,
          8408
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3616,
              "nodeType": "Block",
              "src": "576:2:34",
              "statements": []
            },
            "documentation": null,
            "id": 3617,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 3611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "539:24:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 3612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "565:5:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:2:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3614,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3610,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8209,
                  "src": "525:13:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$8209_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "525:50:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:2:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:34"
            },
            "scope": 3618,
            "src": "503:75:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3665,
        "src": "434:147:34"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3619,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2386,
              "src": "1461:15:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$2386",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3620,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:15:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3621,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2040,
              "src": "1478:19:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$2040",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 3622,
            "nodeType": "InheritanceSpecifier",
            "src": "1478:19:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3623,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2180,
              "src": "1499:15:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$2180",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3624,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:15:34"
          }
        ],
        "contractDependencies": [
          1777,
          1835,
          2040,
          2180,
          2386,
          2638,
          10186
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\nwhen receiving purchases.\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 3664,
        "linearizedBaseContracts": [
          3664,
          2180,
          2040,
          1835,
          2638,
          2386,
          1777,
          10186
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3662,
              "nodeType": "Block",
              "src": "1901:190:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3657,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3638,
                          "src": "2071:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3658,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3634,
                          "src": "2079:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2071:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10903,
                        10904
                      ],
                      "referencedDeclaration": 10903,
                      "src": "2063:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:20:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3661,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:20:34"
                }
              ]
            },
            "documentation": null,
            "id": 3663,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3641,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3630,
                    "src": "1760:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3642,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3632,
                    "src": "1766:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3643,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3636,
                    "src": "1774:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$8237",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 3644,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3640,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1777,
                  "src": "1750:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1777_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1750:30:34"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3646,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3634,
                    "src": "1806:3:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3647,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3645,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2386,
                  "src": "1790:15:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$2386_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:20:34"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3649,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3626,
                    "src": "1835:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3650,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3628,
                    "src": "1848:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3651,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3648,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2638,
                  "src": "1820:14:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2638_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1820:40:34"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3653,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3638,
                    "src": "1890:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3654,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3652,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2040,
                  "src": "1870:19:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$2040_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1870:25:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3626,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1545:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3628,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1575:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3630,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1605:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3632,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1628:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3634,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1653:11:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3636,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1675:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$8237",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3635,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8237,
                    "src": "1675:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$8237",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3638,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1705:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1534:190:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:34"
            },
            "scope": 3664,
            "src": "1522:569:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3665,
        "src": "1433:661:34"
      }
    ],
    "src": "0:2096:34"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        3664
      ],
      "SampleCrowdsaleToken": [
        3618
      ]
    },
    "id": 3665,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3599,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:34"
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 3600,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 2387,
        "src": "28:53:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3601,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 2041,
        "src": "83:59:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 3602,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 2181,
        "src": "144:51:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 3603,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 8238,
        "src": "197:42:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../token/ERC20/ERC20Detailed.sol",
        "id": 3604,
        "nodeType": "ImportDirective",
        "scope": 3665,
        "sourceUnit": 8210,
        "src": "241:42:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3605,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8237,
              "src": "467:13:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$8237",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3606,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3607,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8209,
              "src": "482:13:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$8209",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3608,
            "nodeType": "InheritanceSpecifier",
            "src": "482:13:34"
          }
        ],
        "contractDependencies": [
          1094,
          8063,
          8209,
          8237,
          8408
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\r\n@dev Very simple ERC20 Token that can be minted.\r\nIt is meant to be used in a crowdsale contract.\r",
        "fullyImplemented": true,
        "id": 3618,
        "linearizedBaseContracts": [
          3618,
          8209,
          8237,
          1094,
          8063,
          8408
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3616,
              "nodeType": "Block",
              "src": "576:2:34",
              "statements": []
            },
            "documentation": null,
            "id": 3617,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 3611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "539:24:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 3612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "565:5:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:2:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3614,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3610,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8209,
                  "src": "525:13:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$8209_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "525:50:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:2:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:34"
            },
            "scope": 3618,
            "src": "503:75:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3665,
        "src": "434:147:34"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3619,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2386,
              "src": "1461:15:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$2386",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3620,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:15:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3621,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2040,
              "src": "1478:19:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$2040",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 3622,
            "nodeType": "InheritanceSpecifier",
            "src": "1478:19:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3623,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2180,
              "src": "1499:15:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$2180",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3624,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:15:34"
          }
        ],
        "contractDependencies": [
          1777,
          1835,
          2040,
          2180,
          2386,
          2638,
          10186
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\nwhen receiving purchases.\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 3664,
        "linearizedBaseContracts": [
          3664,
          2180,
          2040,
          1835,
          2638,
          2386,
          1777,
          10186
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3662,
              "nodeType": "Block",
              "src": "1901:190:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3657,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3638,
                          "src": "2071:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3658,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3634,
                          "src": "2079:3:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2071:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10903,
                        10904
                      ],
                      "referencedDeclaration": 10903,
                      "src": "2063:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:20:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3661,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:20:34"
                }
              ]
            },
            "documentation": null,
            "id": 3663,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3641,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3630,
                    "src": "1760:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3642,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3632,
                    "src": "1766:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3643,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3636,
                    "src": "1774:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$8237",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 3644,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3640,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1777,
                  "src": "1750:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1777_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1750:30:34"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3646,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3634,
                    "src": "1806:3:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3647,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3645,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2386,
                  "src": "1790:15:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$2386_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:20:34"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3649,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3626,
                    "src": "1835:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3650,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3628,
                    "src": "1848:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3651,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3648,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2638,
                  "src": "1820:14:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2638_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1820:40:34"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3653,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3638,
                    "src": "1890:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3654,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3652,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2040,
                  "src": "1870:19:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$2040_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1870:25:34"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3626,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1545:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3628,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1575:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3630,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1605:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3632,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1628:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3634,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1653:11:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3636,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1675:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$8237",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3635,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8237,
                    "src": "1675:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$8237",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3638,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "1705:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1534:190:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 3655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:34"
            },
            "scope": 3664,
            "src": "1522:569:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3665,
        "src": "1433:661:34"
      }
    ],
    "src": "0:2096:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-28T13:58:04.607Z"
}