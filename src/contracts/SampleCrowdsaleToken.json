{
  "contractName": "SampleCrowdsaleToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506040805190810160405280601681526020017f53616d706c652043726f776473616c6520546f6b656e000000000000000000008152506040805190810160405280600381526020017f534354000000000000000000000000000000000000000000000000000000000081525060126200009a33620000f0640100000000026401000000009004565b8260049080519060200190620000b2929190620002b2565b508160059080519060200190620000cb929190620002b2565b5080600660006101000a81548160ff021916908360ff16021790555050505062000361565b620001148160036200015a6401000000000262001567179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200019757600080fd5b620001b282826200021d640100000000026401000000009004565b151515620001bf57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200025b57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f557805160ff191683800117855562000326565b8280016001018555821562000326579182015b828111156200032557825182559160200191906001019062000308565b5b50905062000335919062000339565b5090565b6200035e91905b808211156200035a57600081600090555060010162000340565b5090565b90565b6116f280620003716000396000f3006080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100e0578063095ea7b31461017057806318160ddd146101d557806323b872dd14610200578063313ce5671461028557806339509351146102b657806340c10f191461031b57806370a082311461038057806395d89b41146103d7578063983b2d561461046757806398650275146104aa578063a457c2d7146104c1578063a9059cbb14610526578063aa271e1a1461058b578063dd62ed3e146105e6575b600080fd5b3480156100ec57600080fd5b506100f561065d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017c57600080fd5b506101bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ff565b604051808215151515815260200191505060405180910390f35b3480156101e157600080fd5b506101ea61082c565b6040518082815260200191505060405180910390f35b34801561020c57600080fd5b5061026b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610836565b604051808215151515815260200191505060405180910390f35b34801561029157600080fd5b5061029a610a3e565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102c257600080fd5b50610301600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a55565b604051808215151515815260200191505060405180910390f35b34801561032757600080fd5b50610366600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c8c565b604051808215151515815260200191505060405180910390f35b34801561038c57600080fd5b506103c1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cb6565b6040518082815260200191505060405180910390f35b3480156103e357600080fd5b506103ec610cfe565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042c578082015181840152602081019050610411565b50505050905090810190601f1680156104595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561047357600080fd5b506104a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da0565b005b3480156104b657600080fd5b506104bf610dc0565b005b3480156104cd57600080fd5b5061050c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dcb565b604051808215151515815260200191505060405180910390f35b34801561053257600080fd5b50610571600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611002565b604051808215151515815260200191505060405180910390f35b34801561059757600080fd5b506105cc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611019565b604051808215151515815260200191505060405180910390f35b3480156105f257600080fd5b50610647600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611036565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106f55780601f106106ca576101008083540402835291602001916106f5565b820191906000526020600020905b8154815290600101906020018083116106d857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561073c57600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b60006108c782600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110bd90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109528484846110de565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b6000600660009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a9257600080fd5b610b2182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112aa90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610c9733611019565b1515610ca257600080fd5b610cac83836112cb565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d965780601f10610d6b57610100808354040283529160200191610d96565b820191906000526020600020905b815481529060010190602001808311610d7957829003601f168201915b5050505050905090565b610da933611019565b1515610db457600080fd5b610dbd8161141f565b50565b610dc933611479565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610e0857600080fd5b610e9782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110bd90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600061100f3384846110de565b6001905092915050565b600061102f8260036114d390919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808383111515156110cf57600080fd5b82840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561111a57600080fd5b61116b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110bd90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111fe816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112aa90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008082840190508381101515156112c157600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561130757600080fd5b61131c816002546112aa90919063ffffffff16565b600281905550611373816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112aa90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61143381600361156790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61148d81600361161790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561151057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156115a357600080fd5b6115ad82826114d3565b1515156115b957600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561165357600080fd5b61165d82826114d3565b151561166857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820fe712ffd7214a931f916eedef4eb186526c06da7c8f00ae0c6da87838533368e0029",
  "deployedBytecode": "0x6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100e0578063095ea7b31461017057806318160ddd146101d557806323b872dd14610200578063313ce5671461028557806339509351146102b657806340c10f191461031b57806370a082311461038057806395d89b41146103d7578063983b2d561461046757806398650275146104aa578063a457c2d7146104c1578063a9059cbb14610526578063aa271e1a1461058b578063dd62ed3e146105e6575b600080fd5b3480156100ec57600080fd5b506100f561065d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017c57600080fd5b506101bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ff565b604051808215151515815260200191505060405180910390f35b3480156101e157600080fd5b506101ea61082c565b6040518082815260200191505060405180910390f35b34801561020c57600080fd5b5061026b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610836565b604051808215151515815260200191505060405180910390f35b34801561029157600080fd5b5061029a610a3e565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102c257600080fd5b50610301600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a55565b604051808215151515815260200191505060405180910390f35b34801561032757600080fd5b50610366600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c8c565b604051808215151515815260200191505060405180910390f35b34801561038c57600080fd5b506103c1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cb6565b6040518082815260200191505060405180910390f35b3480156103e357600080fd5b506103ec610cfe565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042c578082015181840152602081019050610411565b50505050905090810190601f1680156104595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561047357600080fd5b506104a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da0565b005b3480156104b657600080fd5b506104bf610dc0565b005b3480156104cd57600080fd5b5061050c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dcb565b604051808215151515815260200191505060405180910390f35b34801561053257600080fd5b50610571600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611002565b604051808215151515815260200191505060405180910390f35b34801561059757600080fd5b506105cc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611019565b604051808215151515815260200191505060405180910390f35b3480156105f257600080fd5b50610647600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611036565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106f55780601f106106ca576101008083540402835291602001916106f5565b820191906000526020600020905b8154815290600101906020018083116106d857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561073c57600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b60006108c782600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110bd90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109528484846110de565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b6000600660009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a9257600080fd5b610b2182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112aa90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610c9733611019565b1515610ca257600080fd5b610cac83836112cb565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d965780601f10610d6b57610100808354040283529160200191610d96565b820191906000526020600020905b815481529060010190602001808311610d7957829003601f168201915b5050505050905090565b610da933611019565b1515610db457600080fd5b610dbd8161141f565b50565b610dc933611479565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610e0857600080fd5b610e9782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110bd90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600061100f3384846110de565b6001905092915050565b600061102f8260036114d390919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808383111515156110cf57600080fd5b82840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561111a57600080fd5b61116b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110bd90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111fe816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112aa90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008082840190508381101515156112c157600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561130757600080fd5b61131c816002546112aa90919063ffffffff16565b600281905550611373816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112aa90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61143381600361156790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61148d81600361161790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561151057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156115a357600080fd5b6115ad82826114d3565b1515156115b957600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561165357600080fd5b61165d82826114d3565b151561166857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820fe712ffd7214a931f916eedef4eb186526c06da7c8f00ae0c6da87838533368e0029",
  "sourceMap": "434:147:36:-;;;503:75;8:9:-1;5:2;;;30:1;27;20:12;5:2;503:75:36;421:153:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:2:36;289:22:11;300:10;289;;;:22;;;:::i;:::-;504:4:109;496:5;:12;;;;;;;;;;;;:::i;:::-;;529:6;519:7;:16;;;;;;;;;;;;:::i;:::-;;558:8;546:9;;:20;;;;;;;;;;;;;;;;;;421:153;;;434:147:36;;719:122:11;776:21;789:7;776:8;:12;;;;;;:21;;;;;:::i;:::-;825:7;813:20;;;;;;;;;;;;719:122;:::o;274:186:9:-;370:1;351:21;;:7;:21;;;;343:30;;;;;;;;393:18;397:4;403:7;393:3;;;:18;;;:::i;:::-;392:19;384:28;;;;;;;;448:4;425;:11;;:20;437:7;425:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:186;;:::o;822:165::-;894:4;938:1;919:21;;:7;:21;;;;911:30;;;;;;;;959:4;:11;;:20;971:7;959:20;;;;;;;;;;;;;;;;;;;;;;;;;952:27;;822:165;;;;:::o;434:147:36:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "434:147:36:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:76:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:76:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;639:76:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:244:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2803:244:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;962:91:106;;;;;;;;;;;;;;;;;;;;;;;3520:299;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3520:299:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:83:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;941:83:109;;;;;;;;;;;;;;;;;;;;;;;;;;;4334:323:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4334:323:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:131:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;460:131:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:106:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1269:106:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:80:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;782:80:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;782:80:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:92:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;534:92:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;634:77:11;;;;;;5177:333:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5177:333:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2016:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2016:140:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:109:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;417:109:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:131:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1714:131:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:76:109;676:6;702:5;695:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:76;:::o;2803:244:106:-;2868:4;2912:1;2893:21;;:7;:21;;;;2885:30;;;;;;;;2960:5;2928:8;:20;2937:10;2928:20;;;;;;;;;;;;;;;:29;2949:7;2928:29;;;;;;;;;;;;;;;:37;;;;3002:7;2981:36;;2990:10;2981:36;;;3011:5;2981:36;;;;;;;;;;;;;;;;;;3035:4;3028:11;;2803:244;;;;:::o;962:91::-;1006:7;1033:12;;1026:19;;962:91;:::o;3520:299::-;3599:4;3645:37;3676:5;3645:8;:14;3654:4;3645:14;;;;;;;;;;;;;;;:26;3660:10;3645:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3616:8;:14;3625:4;3616:14;;;;;;;;;;;;;;;:26;3631:10;3616:26;;;;;;;;;;;;;;;:66;;;;3693:26;3703:4;3709:2;3713:5;3693:9;:26::i;:::-;3750:10;3735:54;;3744:4;3735:54;;;3762:8;:14;3771:4;3762:14;;;;;;;;;;;;;;;:26;3777:10;3762:26;;;;;;;;;;;;;;;;3735:54;;;;;;;;;;;;;;;;;;3807:4;3800:11;;3520:299;;;;;:::o;941:83:109:-;982:5;1007:9;;;;;;;;;;;1000:16;;941:83;:::o;4334:323:106:-;4414:4;4458:1;4439:21;;:7;:21;;;;4431:30;;;;;;;;4506:45;4540:10;4506:8;:20;4515:10;4506:20;;;;;;;;;;;;;;;:29;4527:7;4506:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4474:8;:20;4483:10;4474:20;;;;;;;;;;;;;;;:29;4495:7;4474:29;;;;;;;;;;;;;;;:77;;;;4588:7;4567:60;;4576:10;4567:60;;;4597:8;:20;4606:10;4597:20;;;;;;;;;;;;;;;:29;4618:7;4597:29;;;;;;;;;;;;;;;;4567:60;;;;;;;;;;;;;;;;;;4645:4;4638:11;;4334:323;;;;:::o;460:131:110:-;528:4;368:20:11;377:10;368:8;:20::i;:::-;360:29;;;;;;;;545:16:110;551:2;555:5;545;:16::i;:::-;579:4;572:11;;460:131;;;;:::o;1269:106:106:-;1324:7;1351:9;:16;1361:5;1351:16;;;;;;;;;;;;;;;;1344:23;;1269:106;;;:::o;782:80:109:-;821:6;847:7;840:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:80;:::o;534:92:11:-;368:20;377:10;368:8;:20::i;:::-;360:29;;;;;;;;599:19;610:7;599:10;:19::i;:::-;534:92;:::o;634:77::-;678:25;692:10;678:13;:25::i;:::-;634:77::o;5177:333:106:-;5262:4;5306:1;5287:21;;:7;:21;;;;5279:30;;;;;;;;5354:50;5388:15;5354:8;:20;5363:10;5354:20;;;;;;;;;;;;;;;:29;5375:7;5354:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;5322:8;:20;5331:10;5322:20;;;;;;;;;;;;;;;:29;5343:7;5322:29;;;;;;;;;;;;;;;:82;;;;5441:7;5420:60;;5429:10;5420:60;;;5450:8;:20;5459:10;5450:20;;;;;;;;;;;;;;;:29;5471:7;5450:29;;;;;;;;;;;;;;;;5420:60;;;;;;;;;;;;;;;;;;5498:4;5491:11;;5177:333;;;;:::o;2016:140::-;2077:4;2094:32;2104:10;2116:2;2120:5;2094:9;:32::i;:::-;2144:4;2137:11;;2016:140;;;;:::o;417:109:11:-;473:4;497:21;510:7;497:8;:12;;:21;;;;:::i;:::-;490:28;;417:109;;;:::o;1714:131:106:-;1786:7;1813:8;:15;1822:5;1813:15;;;;;;;;;;;;;;;:24;1829:7;1813:24;;;;;;;;;;;;;;;;1806:31;;1714:131;;;;:::o;2351:150:43:-;2409:7;2455:9;2442:1;2437;:6;;2429:15;;;;;;;;2471:1;2467;:5;2455:17;;2492:1;2485:8;;2351:150;;;;;:::o;5732:262:106:-;5834:1;5820:16;;:2;:16;;;;5812:25;;;;;;;;5868:26;5888:5;5868:9;:15;5878:4;5868:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5850:9;:15;5860:4;5850:15;;;;;;;;;;;;;;;:44;;;;5921:24;5939:5;5921:9;:13;5931:2;5921:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5905:9;:13;5915:2;5905:13;;;;;;;;;;;;;;;:40;;;;5976:2;5961:25;;5970:4;5961:25;;;5980:5;5961:25;;;;;;;;;;;;;;;;;;5732:262;;;:::o;2854:150:43:-;2912:7;2932:9;2948:1;2944;:5;2932:17;;2973:1;2968;:6;;2960:15;;;;;;;;2995:1;2988:8;;2854:150;;;;;:::o;6346:269:106:-;6440:1;6421:21;;:7;:21;;;;6413:30;;;;;;;;6471:23;6488:5;6471:12;;:16;;:23;;;;:::i;:::-;6456:12;:38;;;;6526:29;6549:5;6526:9;:18;6536:7;6526:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6505:9;:18;6515:7;6505:18;;;;;;;;;;;;;;;:50;;;;6592:7;6571:36;;6588:1;6571:36;;;6601:5;6571:36;;;;;;;;;;;;;;;;;;6346:269;;:::o;719:122:11:-;776:21;789:7;776:8;:12;;:21;;;;:::i;:::-;825:7;813:20;;;;;;;;;;;;719:122;:::o;849:130::-;909:24;925:7;909:8;:15;;:24;;;;:::i;:::-;963:7;949:22;;;;;;;;;;;;849:130;:::o;822:165:9:-;894:4;938:1;919:21;;:7;:21;;;;911:30;;;;;;;;959:4;:11;;:20;971:7;959:20;;;;;;;;;;;;;;;;;;;;;;;;;952:27;;822:165;;;;:::o;274:186::-;370:1;351:21;;:7;:21;;;;343:30;;;;;;;;393:18;397:4;403:7;393:3;:18::i;:::-;392:19;384:28;;;;;;;;448:4;425;:11;;:20;437:7;425:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:186;;:::o;539:189::-;638:1;619:21;;:7;:21;;;;611:30;;;;;;;;660:18;664:4;670:7;660:3;:18::i;:::-;652:27;;;;;;;;715:5;692:4;:11;;:20;704:7;692:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;539:189;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"../crowdsale/validation/CappedCrowdsale.sol\";\r\nimport \"../crowdsale/distribution/RefundableCrowdsale.sol\";\r\nimport \"../crowdsale/emission/MintedCrowdsale.sol\";\r\nimport \"../token/ERC20/ERC20Mintable.sol\";\r\nimport \"../token/ERC20/ERC20Detailed.sol\";\r\n\r\n/**\r\n * @title SampleCrowdsaleToken\r\n * @dev Very simple ERC20 Token that can be minted.\r\n * It is meant to be used in a crowdsale contract.\r\n */\r\ncontract SampleCrowdsaleToken is ERC20Mintable, ERC20Detailed {\r\n    constructor () public ERC20Detailed(\"Sample Crowdsale Token\", \"SCT\", 18) {}\r\n}\r\n\r\n/**\r\n * @title SampleCrowdsale\r\n * @dev This is an example of a fully fledged crowdsale.\r\n * The way to add new features to a base crowdsale is by multiple inheritance.\r\n * In this example we are providing following extensions:\r\n * CappedCrowdsale - sets a max boundary for raised funds\r\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\n * MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\n * when receiving purchases.\r\n *\r\n * After adding multiple features it's good practice to run integration tests\r\n * to ensure that subcontracts works together as intended.\r\n */\r\n// XXX There doesn't seem to be a way to split this line that keeps solium\r\n// happy. See:\r\n// https://github.com/duaraghav8/Solium/issues/205\r\n// --elopio - 2018-05-10\r\n// solium-disable-next-line max-len\r\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\r\n    constructor (\r\n        uint256 openingTime,\r\n        uint256 closingTime,\r\n        uint256 rate,\r\n        address wallet,\r\n        uint256 cap,\r\n        ERC20Mintable token,\r\n        uint256 goal\r\n    )\r\n        public\r\n        Crowdsale(rate, wallet, token)\r\n        CappedCrowdsale(cap)\r\n        TimedCrowdsale(openingTime, closingTime)\r\n        RefundableCrowdsale(goal)\r\n    {\r\n        //As goal needs to be met for a successful crowdsale\r\n        //the value needs to less or equal than a cap which is limit for accepted funds\r\n        require(goal <= cap);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\dev\\tokenmint\\contracts\\open-zeppelin-contracts\\examples\\SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        3761
      ],
      "SampleCrowdsaleToken": [
        3715
      ]
    },
    "id": 3762,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3696,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:36"
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 3697,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 2484,
        "src": "28:53:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3698,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 2138,
        "src": "83:59:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 3699,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 2278,
        "src": "144:51:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 3700,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 8335,
        "src": "197:42:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../token/ERC20/ERC20Detailed.sol",
        "id": 3701,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 8307,
        "src": "241:42:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3702,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8334,
              "src": "467:13:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$8334",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3703,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:36"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3704,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8306,
              "src": "482:13:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$8306",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3705,
            "nodeType": "InheritanceSpecifier",
            "src": "482:13:36"
          }
        ],
        "contractDependencies": [
          1191,
          8160,
          8306,
          8334,
          8505
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\r\n@dev Very simple ERC20 Token that can be minted.\r\nIt is meant to be used in a crowdsale contract.\r",
        "fullyImplemented": true,
        "id": 3715,
        "linearizedBaseContracts": [
          3715,
          8306,
          8334,
          1191,
          8160,
          8505
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3713,
              "nodeType": "Block",
              "src": "576:2:36",
              "statements": []
            },
            "documentation": null,
            "id": 3714,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "539:24:36",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 3709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "565:5:36",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:2:36",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3707,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8306,
                  "src": "525:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$8306_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "525:50:36"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:2:36"
            },
            "payable": false,
            "returnParameters": {
              "id": 3712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:36"
            },
            "scope": 3715,
            "src": "503:75:36",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3762,
        "src": "434:147:36"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3716,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2483,
              "src": "1461:15:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$2483",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3717,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:15:36"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3718,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2137,
              "src": "1478:19:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$2137",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 3719,
            "nodeType": "InheritanceSpecifier",
            "src": "1478:19:36"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3720,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2277,
              "src": "1499:15:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$2277",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3721,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:15:36"
          }
        ],
        "contractDependencies": [
          1874,
          1932,
          2137,
          2277,
          2483,
          2735,
          10283
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\nwhen receiving purchases.\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 3761,
        "linearizedBaseContracts": [
          3761,
          2277,
          2137,
          1932,
          2735,
          2483,
          1874,
          10283
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3759,
              "nodeType": "Block",
              "src": "1901:190:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3754,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3735,
                          "src": "2071:4:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3755,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3731,
                          "src": "2079:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2071:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3753,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11000,
                        11001
                      ],
                      "referencedDeclaration": 11000,
                      "src": "2063:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3758,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:20:36"
                }
              ]
            },
            "documentation": null,
            "id": 3760,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3738,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3727,
                    "src": "1760:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3739,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3729,
                    "src": "1766:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3740,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3733,
                    "src": "1774:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$8334",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 3741,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3737,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1874,
                  "src": "1750:9:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1874_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1750:30:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3743,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3731,
                    "src": "1806:3:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3744,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3742,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2483,
                  "src": "1790:15:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$2483_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:20:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3746,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3723,
                    "src": "1835:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3747,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3725,
                    "src": "1848:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3748,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3745,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2735,
                  "src": "1820:14:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2735_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1820:40:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3750,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3735,
                    "src": "1890:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3751,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3749,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2137,
                  "src": "1870:19:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$2137_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1870:25:36"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3723,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1545:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3725,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1575:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3727,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1605:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3729,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1628:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3731,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1653:11:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3733,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1675:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$8334",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3732,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8334,
                    "src": "1675:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$8334",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3735,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1705:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1534:190:36"
            },
            "payable": false,
            "returnParameters": {
              "id": 3752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:36"
            },
            "scope": 3761,
            "src": "1522:569:36",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3762,
        "src": "1433:661:36"
      }
    ],
    "src": "0:2096:36"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        3761
      ],
      "SampleCrowdsaleToken": [
        3715
      ]
    },
    "id": 3762,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3696,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:36"
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 3697,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 2484,
        "src": "28:53:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3698,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 2138,
        "src": "83:59:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 3699,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 2278,
        "src": "144:51:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 3700,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 8335,
        "src": "197:42:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dev/tokenmint/contracts/open-zeppelin-contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../token/ERC20/ERC20Detailed.sol",
        "id": 3701,
        "nodeType": "ImportDirective",
        "scope": 3762,
        "sourceUnit": 8307,
        "src": "241:42:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3702,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8334,
              "src": "467:13:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$8334",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3703,
            "nodeType": "InheritanceSpecifier",
            "src": "467:13:36"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3704,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8306,
              "src": "482:13:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$8306",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3705,
            "nodeType": "InheritanceSpecifier",
            "src": "482:13:36"
          }
        ],
        "contractDependencies": [
          1191,
          8160,
          8306,
          8334,
          8505
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\r\n@dev Very simple ERC20 Token that can be minted.\r\nIt is meant to be used in a crowdsale contract.\r",
        "fullyImplemented": true,
        "id": 3715,
        "linearizedBaseContracts": [
          3715,
          8306,
          8334,
          1191,
          8160,
          8505
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3713,
              "nodeType": "Block",
              "src": "576:2:36",
              "statements": []
            },
            "documentation": null,
            "id": 3714,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "539:24:36",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 3709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "565:5:36",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:2:36",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3707,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8306,
                  "src": "525:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$8306_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "525:50:36"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:2:36"
            },
            "payable": false,
            "returnParameters": {
              "id": 3712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:36"
            },
            "scope": 3715,
            "src": "503:75:36",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3762,
        "src": "434:147:36"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3716,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2483,
              "src": "1461:15:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$2483",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3717,
            "nodeType": "InheritanceSpecifier",
            "src": "1461:15:36"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3718,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2137,
              "src": "1478:19:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$2137",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 3719,
            "nodeType": "InheritanceSpecifier",
            "src": "1478:19:36"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3720,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2277,
              "src": "1499:15:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$2277",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3721,
            "nodeType": "InheritanceSpecifier",
            "src": "1499:15:36"
          }
        ],
        "contractDependencies": [
          1874,
          1932,
          2137,
          2277,
          2483,
          2735,
          10283
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\nwhen receiving purchases.\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 3761,
        "linearizedBaseContracts": [
          3761,
          2277,
          2137,
          1932,
          2735,
          2483,
          1874,
          10283
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3759,
              "nodeType": "Block",
              "src": "1901:190:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3754,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3735,
                          "src": "2071:4:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3755,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3731,
                          "src": "2079:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2071:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3753,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11000,
                        11001
                      ],
                      "referencedDeclaration": 11000,
                      "src": "2063:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3758,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:20:36"
                }
              ]
            },
            "documentation": null,
            "id": 3760,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3738,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3727,
                    "src": "1760:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3739,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3729,
                    "src": "1766:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3740,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3733,
                    "src": "1774:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$8334",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 3741,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3737,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1874,
                  "src": "1750:9:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1874_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1750:30:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3743,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3731,
                    "src": "1806:3:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3744,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3742,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2483,
                  "src": "1790:15:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$2483_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:20:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3746,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3723,
                    "src": "1835:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3747,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3725,
                    "src": "1848:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3748,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3745,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2735,
                  "src": "1820:14:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2735_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1820:40:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3750,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3735,
                    "src": "1890:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3751,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3749,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2137,
                  "src": "1870:19:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$2137_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1870:25:36"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3723,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1545:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3725,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1575:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3727,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1605:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3729,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1628:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3731,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1653:11:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3733,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1675:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$8334",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3732,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8334,
                    "src": "1675:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$8334",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3735,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "1705:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1534:190:36"
            },
            "payable": false,
            "returnParameters": {
              "id": 3752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:36"
            },
            "scope": 3761,
            "src": "1522:569:36",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3762,
        "src": "1433:661:36"
      }
    ],
    "src": "0:2096:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-02T15:51:01.665Z"
}